%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <65B0><5EFA> Microsoft PowerPoint <6F14><793A><6587><7A3F>.pdf
%%Creator: Adobe Acrobat 11.0.0
%%For: HGH
%%CreationDate: 2019/4/3 ÐÇÆÚÈý, 11:48:04
%%BoundingBox: 0 0 1341 1238
%%HiResBoundingBox: 0 0 1340.7184 1237.5496
%%CropBox: 0 0 1340.7184 1237.5496
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1040 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="MicrosoftÂ® PowerPointÂ® 2016"
   dc:format="application/pdf"
   xmp:CreatorTool="MicrosoftÂ® PowerPointÂ® 2016"
   xmp:CreateDate="2019-04-03T11:42:35+08:00"
   xmp:ModifyDate="2019-04-03T11:42:35+08:00"
   xmpMM:DocumentID="uuid:907CE4E4-F273-47EA-AA9B-0B90B9DB5633"
   xmpMM:InstanceID="uuid:907CE4E4-F273-47EA-AA9B-0B90B9DB5633">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint æ¼ç¤ºæç¨¿</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>é»å½èª</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -1237.55 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1237.55 li
1340.72 1237.55 li
1340.72 0 li
cp
clp
gsave
-.19519 1237.76 mo
1340.8 1237.76 li
1340.8 -.235352 li
-.19519 -.235352 li
cp
clp
-1318.2 1580.76 mo
2650.32 1580.76 li
2650.32 -403.495 li
-1318.2 -403.495 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
128.645 184.325 mo
1127.94 184.325 li
1127.94 81.1248 li
128.645 81.1248 li
cp
ef
2.28 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
128.645 184.325 mo
1127.94 184.325 li
1127.94 81.1248 li
128.645 81.1248 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
309.305 751.325 mo
404.925 842.215 li
@
1010.86 749.705 mo
932.705 842.255 li
@
406.805 842.225 mo
932.705 842.225 li
@
825.605 167.525 mo
1069.98 167.525 li
1069.98 100.865 li
825.605 100.865 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
825.605 167.525 mo
1069.98 167.525 li
1069.98 100.865 li
825.605 100.865 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YDWHRU+DengXian-GBK-EUC-H)
%%Title: (YDWHRU+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YDWHRU+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 11 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
13867 <001C60D8A8C9B5EE31113D8C06109CF538164AAF67DC4436E7F7CBB50
51819A57BE31BE6C9D32B6525B5ED54B312DDC21C82AE4BD0ED9DF5F21066C65
362064989C4888EC88604173E984C6B82270D0235F328E04AF4FD0933F1839E7
5AB16AFC2D5DD2072F97D7A1FE8C638D797E82EFE1E32930B245FB858D78DF54
DE9680C2B1D4CBCC82DCCBE076983D3E59FAA04F4C765213DD2E5DBFFB02FEE0
8FF6A3FE80761798440FA75746BEB50A763BB6A28732BC1F8F2AC35B053C3677
5B3CEF5593E6E8F0126C29B1AAB8D7D3966CA0B4B7B7F051756E2D229A92ACD0
7F0EB3CAD7D7F43AA1DCC510135> |
13446 <001C60D8A8C9B5EE3136596B5D023EE906341FEB3ADD67AD5338E8714
7740E89B01DE65D094CAAB031991489CF4E67D1A07AE8C516D5BCCA0952183AE
32DFAAF26B87F4714B680708AA52C9BBB02DEB2C438AD6935F039F4FFE9B422F
5CF0F4073B82BB52E011BC5E035D7271B8BE17C3E6CAAE21636009BF490F6CAF
851102153C586F9AD0D51C94B3FCBCA3D9EC0ABA267974DF1552EF0D8F666AA1
27216475287CADC49D22E80D59F009F3F233ED8> |
18195 <001C60D8A8C9B5EE3117D7AC1B6E00DE58AA953769A41D382E27C24F2
0237E3218ADE8EED679AD7B8B96A232D24FF3C6861D95A7A2F01742B96824FA9
119E1D3DE37D187F449DCDF993B9DEF5A01D6FC761C56E47770BCB1AF0B262C9
F4B71B2402C270C2288FAE1EC7B63504305A36EBC41ECE7FA2FFBF11CF3313DC
B1C31A15FF46BC1709EC33E47967E1F7D4C32C7F78744C06B19ABB86B53995AA
B157BCBB9C1B4E29125263C9A9C0DCE4666A075E84B9ABF2BD6B8F3058751A1A
D49F6D4188C12A381504F5BCC26174895F1EB32FEAA48FC88C7B649CBFFF1408
48E16E082E54718A3696979883688A632A9AC6A9F118AAE7DBB6AECB3F08EB57
F0293083201E432F5F7355540DFC2F47F435CA4FDF3883A030F6180E66E43A49
222AB70A5C4D7E2C8AC638475BB3D5EB41B3CD0C4E33D17241ACBB3BEC5AAA54
88FD95D0949782CF7E8> |
18805 <001C60D8A8C9B5EE310A5FF12EF62E1735BE3079A9B8EA7813EE26CDD
6CAE7EEF4E22F66B94BC30D11C214A408BA4BF9EAC8FC4D7832A27B8674A2C1C
A1306002EEFE0E51CF4EF51015470B72E51D2C13DA0D1DF05EB2BAAF01469D3B
60EB0D81356C450FA413942C5896D09E2726C7D77340EA089871AAC19A11FE3D
A8A2719C53FF6588A52925CBE91E5632303B8CD3BB889CB7104354B76B77BE25
1F12CA9D032CC05332CE98F9C5B4F35A99DBE4F0BB13396AB1B68528E0BCEC7F
3AF9244F65A926F38DFB64AE1FFBFE861069E0D241B8CD3DD6E5F215A08E58E2
DA578D8F6CB0D3785659E72F5EE68154210F98EA974D94FBB8C480B54A17483A
5CDA773F2703403A9FED61DB8F571D0527463C3C5E1BE0C82BD203BE661A0FC0
E46D04DEFC94FFAE6019196490257DE654D3812E6ECC5CE3A36D035E5D010327
BD6B542A10E069E6DC1AF8DD9E1A7B37717E816DA0F719FCD12B7CD096E3AAA4
64B5F7B4A049702BEE52BBD3BDFBB76A1BB5781895947CF5B9BA00E7C76A1A3B
18311C19A8B12ABF07B5B58AA9DF8B6B263> |
17795 <001C60D8A8C9B5EE3102ACF6DA1574FF7DE927B8CBF37F5241CBE4591
10F5CEF92306AAF001C4E4C848D0FBCF1E97CF09D79B33182400D635FAF37844
7D75DB108A532C80D850D8D913F46D44F97EB2057FEE27BF74578F95877B9FAF
F6E357CBF18945F0C950567ECC42FDA83DB4E123D642E32FBA57B1471DCA7AB9
73BB27BED96B73F0B0A12EEB2737C7F657D0708B540CA09A238F21B11FDA3631
F5ADAD8450CEBF0F4E2E9FDEAAE7C0A8F86206F3AE422817B30431A83BCA74C6
8A20EBAD75F6902EEF457A04931416F88DA72C4C88AF8A3FFB3CFECBA7AE062C
03AE0CA580490699F24141DFB736E2D44F6EAFF71E151BE631069E7F8D2E90A2
199071532F49C7F8E6801EB3082C8C7AC4B39AE00A849B599A39A81A4B5E3C69
167BCE7EE65B69AA3D413A5BF63C408731250F92E7BCE1F000C5C77> |
12060 <001C60D8A8C9B5EE310D0E6471F578DACC4E5F150E5D8A4244137C7BA
32CAF70FAEA78F61D7241D706E8F57A032966C5FF4B6283683DC8AEDD26E586C
F1DA58977A53B1674627FA3831FE5BDFAB58E334D7BF6A396FFAB6D2C6095EBB
FD5700DF8E843543DBBBE2C1CD3DB2C49BAF38EAE02704E0EBCE293F598DB8A8
59D774583525F9B78D5B47F19738E181136AC32D8B460ED689C02D096AF5E205
F5624F0FDFB158442162B52988E8354B38D8F9774F3B210BF9CD94C4E6D2A0F9
E7B2B3A616E4582AC08A83A7EEF36F3CBC3BBA0E05B87A92F1F5633DF92AD0FE
9EE6B1571C25FF31E630F864A3A956E1EFACBD62427274E0505F958C878929F6
320276F2DD0B4E71224F4D3439B24F479CC0B3CE7E8DA4617DA293A136313D40
115FBC608B0CB60D97B2D6160A270DD51475E4039AE96E2014D637C23ED5F53E
B28FC9EFB79EA2C5153E77CF1FA74059EBCB6EF75535AD3F9219D91027B707FF
5CE209258C6E78B> |
23790 <001C60D8A8C9B5EE3102705A5A6205363629AD8FF0160EB06096028B9
2053258CF60D6E1A57433EDA6F9D85225903DF4DAFA5301F73735BB03C5C9B9A
AE9CB82C472A2798331EC5B7FC505E923B4B5564657416751C41ED868B6371E3
6570D747A878AF962D41C73236CCF69AA8EEE2A73D4684350830F230CD877BDE
28F1BA1CAF31D7E29942BCB26CF023E24875AFBB5237DDED3B6D5972489C2062
CDA212899F21223E39D2409D1B7D518D28A3589DCE413B4515A31590EF9926BC
822B35C19EE2EDB66845073CC4E15C8DC88CFD3081361AAF8BEC96378E5623CF
C3977264497AE67C67D004A6A1AD1E3E9A8D59ECBE60125FB4DEEC45FFCBBF16
57E6089F3C9CF9FF508C915FFAF20BE8CAE848C60B3FF8B01524D033790DE37D
E1D9CED015D909E38D2243CDED8CB807A1F96B9EAE322CABE6E63F1A62A7FB77
DF44B2A29E092C0BBA2E8DD2627EF6C7681ED82E3A82C1F0AE16B77A4C65D820
D61D9AFD62338B8A42A8FE5ECA3B16804A8ACED40B4346C49FE4CAA01C396417
C0ECCEC71DDA4FAE705DABB189C3FD9DB75718716457056D65301480F54171A7
D90971C6DDF6F815078DC6F5524A9A9378977F6E641672F62BEB3980E07E3847
F35> |
7437 <001C60D8A8C9B5EE3102C986BDE51EF2CF4BF6EE7487180656ED5A4F62
58DE8DE2FF6CF6A480BE989816B5A962A4BE594A7F23FD9DEACEE0B733B47EF6
096E9979C0FD8B6393E53343A71E403B3AD10A9BE88535609C9D9A07C5B6A07A
36FACD747D93FFC8F807A716FC690A93A9AC991DE79255A8CE11F99B9AE5BB3F
C67FF0457CEB6F4924B4EB6154A932D0376F4AB9B0AC56084E0D59E07D1D3679
065F55C67F36D021EA2759E0049C359083574C771976CA81D9A2562883EDC40E
4DC15D6B0D106C3D422D32F1D41557A86AF9A1F9DA9E603B35516504DBF48A53
1DB1208B5D9F651AFB> |
13496 <001C60D8A8C9B5EE310D16461C93CC1F4B31D552CB02AB0114843A7C5
2A23CDCB273906E6ED66E9B4564CEA6B8D980DFFD0E46E4D04C72213CEEB90D9
9F35BCCCE9165C3B83C7FA02872473112B94251EDC56A9946FB98BC6A9724F71
D0C582D4739CF51FD4BB0D3116719696BC389629DB0EC055488F4625F78603C2
4D7445D462B037EED4DAE17821F07849125FDDF2A146E305D46607FAB8920C77
28993B06FE0E8EF5D40BBB53943E07A428D822235BABDCF030FF594742025E90
60144CBC5D55B5409A285E3CEC5E64C1111> |
15316 <001C60D8A8C9B5EE310D7E6ECFB2FF794FFBC3FF7737EB74D81B6AE2C
E07D4E9F7B9193E47642472BBBBB2443C82113C202D58FB8CE2BA71765611C6F
EBD592FC61F509CD6CEACF54C25669D1DCF80341FD9EC61C5BBDAE6FD16BC4BD
FAB2C90222EE682FB63535497F6A6A13E79E584A73C77CE38743987CF2CB6B16
4F7771453009E17AECC4266B8C923763EE4DEC09B1CAF91B16C19FC548FFC535
11CA02E361A21266EB9DB8B1F4D23AEE2FAB8FEDEC4F931DF4746059D0301ACA
C3C6B73F2C19CD19A5D1CE004BFB415704CFEDF6876F8EE94F6254D983E7DCC5
EE47EABF8B7B1740CF8662540E61B594B091DFF7CCC9DCB639DFA66DADF65D92
BB82B63EA081CDE3546109C86AA677FC275F9C2CE8245FA062667D57D0B82835
332A9B7E0C8009319318EE629FBE89DF821024FDDDE95EC85A3486DDBBA30013
698BE04E9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YDWHRU+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/YDWHRU+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
839.205 141.465 mo
(6+4\206G\023IuE\203)sh
947.805 141.465 mo
(/\034\\\356\035\0154\270;\324)sh
6.30481 751.325 mo
612.245 751.325 li
612.245 439.385 li
6.30481 439.385 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
6.30481 751.325 mo
612.245 751.325 li
612.245 439.385 li
6.30481 439.385 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
543.845 1032.84 mo
788.285 1032.84 li
788.285 907.865 li
543.845 907.865 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
543.845 1032.84 mo
788.285 1032.84 li
788.285 907.865 li
543.845 907.865 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
18987 <001C60D8A8C9B5EE310D5E3B21EA04A49D4D9A2EFCD67229BD88A3B6C
9265FAC10CDFD5859A8A7EAAE97DA3979E448A2DEEF436FEA451B708E090FC48
54478934AEE5C24164A6EC2536FD175571CDD1BE4095EFA82E07B0C0B6349CED
40994DBD83CBC9A54A6F9874C6D673FC084DA9F15D8A26C612F504E182EF3318
834195643C4C4F15AA3A38A0FCDBC87AFACB043C558AB5B2E654C14B002142DB
8491AFB71AF7BD10FE9259BAB5DB0A82369B4353CA93AD5DFB9587B332CD758A
EF4651682B400E9A94BC015DDFD024EE85E73A95DDCB04ED4AE0E791B3807AEB
AFA4C1E84F4B80956543F30264DC1BAA6708727937E6C3DFB782ECFA43ABAAA7
23508322311D26912727044242183B172BEA9E3AE7895E76803B50D781FE4207
CC5D8DE0C51A02123F02426455E5C46A107C262C68FDEB449413ABE06FEC263E
5472CD136116450D41E102967A3B4DD4CB690E6C4FA3B6AEEBC94D8647E45924
DA4706C742406DF3BE8014230A2B8FCF9A91C22119D47952E51FD7E0769B8311
8E164489F740A2D7FAFB180E4F5A7A422FD3B01FE23676B0A6B535750140AE40
BA06109E5F183AB5CC5F2DA7EEA4C3B9B76A94A88A38A15A3BEC3F4D845DB975
C53> |
7571 <001C60D8A8C9B5EE310D2D09A3F2464330955DFEBA2F939A153F5DABF0
75D638A348D34407C41BCB37E7A8461448D8558068A3E12F8B57997144254B10
BC7C5CB7780DD2E15BCFC6B6A8A394ABBC321FBB0AA72B2FAD5EB4231E344253
CFDA3A94962991102C2823ECB67EEFF198C6908848BDBBF5541FD795DE718CC9
3CF8701F9068F6465789BA9CF4BCB6ADB15D58C1F9B650A186F7F107D762BECE
14B6633ECC3D7A8D71A492C05404DA4C409ED299> |
18911 <001C60D8A8C9B5EE3145CFC559B02023FFA53F6F48F88FDB0F9DDCB5E
CE6F5B4F2CF75BAD930D5304BF60B45B3CDA88C82C06AAC41330DBD89E5C9F91
37B99455CF935B5E50F359A1C5D3DB4C1E80C5BB622F110BB8DCC2F63DA32E31
991E8B90A5ED6F6C5592DE55EDECBE584A31E66D3893D7644D90F34B8E92C16E
B1B07CEE660FE0546F9A465C3B734E20E017B14A368434646F46F5677BC02F86
0E2F7829FA6D6638351BA2F5D24662A1F7CAE8100F925FA0D2EC5987A8DDE431
554BCC0F74605995EC3A960A3E581AD790139CE912E6CA07A12B060449C7CB43
129163427A8FC5316ADEC4D3DC7BC476E62C80A66CE71DDAE780030A1AC2922B
CEE807AB1CA534B8961006464DB50FAD5DECE6318C330AD25363A3D1CBC146EA
F012680DBDB1A9864182D58CEB93C8860E182CFC1656F398949A81EDD88D4891
7878B453B0C8844AF8D49334FB84CA960B1C82F9CF86CFB79845DDAD9DC54F4D
51800945D4222CA> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
576.705 977.605 mo
(J+\035\223I\337)sh
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 4 GetGlyphDirectory
19922 <001C60D8A8C9B5EE3145471278B072BADEFEAA4336C61FD208E46387D
252DE0B66A3F173FB3C7644F1C2964578911C26FC3880D3DB1CE8FCBE0AD6E59
4B533F851CB3E559B573CD1ABE662F74BA279A40E7F131EC710C4D93A989889C
0D7F8BE2900BB95D17195172F6C4CCEFBF6D035DCF6BCC0569286D2CEE4274EB
70AC4A83C2723FF00FE52FB9B2318DCAD634627B9D41245ADB10F4F6BCBA3C63
E9D56952B2E2022FF1DC22326535225352A96A63FE501BAFC1119CCA64812B89
2770DFF62F16500E22E89CE1D11BF7A5774BB859BBDC9595E8D7F30ED6D06BD7
E6FD3FABFD2525E0170ED8429EA72B2A05D7258F91A2C3735E4395BA9F30D700
4363E6D117A4BFBE2D7FAA5F150BDB51291E647B71C3F14F2D3FA8FA4CC68288
AF2B7ACD36BE24115736120A94FFC9AE6405D9339DCAEB9A4B9063DA94C43963
039CE2EDC3601B964F08E8ED97B2D78E0F422F796FCA0727174E6145CEE5B63D
518C468748BBCC304936F6D57B3ADC7838F16AC0C539FF0662CB1328EB88094A
E674B078C4E9AFC5C0E7C1C7AFC3B0DCBE83F40D7BF7B3420BF3346124285901
BB24613A70903B29B287F> |
23225 <001C60D8A8C9B5EE310D7343ADA454CF6FFE87B685730FAA02C8EFF19
5D6CFC92A3A61992D6B1C830E5197312E9D5DD3CFC67FED92B8D462C9FCB0B10
FBBC5A7C8DB323BEF65408476C20A43DFE8B12C2DCEF3086325A40D260FF886A
FE97A92E204D5A85C5451727B66C4F4D25EA6BF2969D4BB132142E37FB7D50DB
49C97AD79F1C5EA12ACE8175225551AA221EB7DE3A6964B6CB02866D91BBAF1B
16C0F76F094CB3D3DC48B6A1D10D0A44728F5F4E2BA6F9D9D5F664F528C461F0
03BE5D22759E8861BF3FBD4BC75AB49D8ACEE86D3F2427C397C723F7F73B3E25
2A5A1368DCF4FC5FA2FFEA16771C850173CD83918DB39B173000AF6BAA7A38BD
099135A36CB7AF4BF74CC90F294551473F2F940849E34A387587A60CB3B4A39D
B836F1247164E9C0E872D9FA3CDD06239D8FA5F9F7EA95E9FDDF51E02EB87B7C
EDABAD8514138492774CE86040123034A207A4263844E0B6BB89989649800253
4985D5C03DB560105D7F764D2B9DDAA823A> |
11092 <001C60D8A8C9B5EE310D62FDF269689CBCB363195BF75B3967111D686
085AA02B6851F7055225A5BDB7C69F92480D150A4BFCBC737A1E433EAD0C947B
4A7428547E81DE7F59ECB7B92B50564FDEE6CBCCFA81CFB862B7773164CEAA5F
CE1625154C68D32EE497D9C67757E18DEFD37A7B534628076AA53D52982D96EE
A0CBD50EAB1FBF45231905634E23E10FD7403204AED789C701B8C6C5605F8D82
4E366678332309FE8775F7E359E441B0F64B38AB412EA9E4FC84BC599FA28059
7A3668EA21449F7D18D979C607A187D36302F8A28CC92A823508A78E21243D1E
036C0C7DB14A16014F8D9CEF0B18232B16D2FE18F332EB7D3E8E62E3AE110503
BCA76B46B3D00E5ED4339412D10629BF5B19D8C910B0A496AF92C77311BB316C
6AC8C44E0B94F0EE2F0B2CD81276DE7F5B59C6BF0BE3CAA59B4679B4A204D464
DC1CDF5BE78C3D1A7CCF5F60C33A0667ABAC0C634768FBFAC30EBA5D95CEAAE3
7792C34CB9D2B3703F43588B9ABAB77C286A59261DCE0A0572530E9D818B6E1A
8BE605B226979A2193DEA8B> |
13850 <001C60D8A8C9B5EE31288F8DE4B0E94D71794CE0AE6C51B4D91CDC9DE
9885F1ACD2B4758D2A2B64A33375F51F9416754411CEBC0A85A5DF59F3BFD0AD
E69AA66161D1807C5DD9EB7EDE08B81F44A2EB4F751E8B527F34EF3A5F0BCDF6
D1A3F84541C139DE1C0770DA1ADC61C7869A4CE4680EEB42D7456ED65BABD8F3
A060E0DF1BEA9F790478FE0E8E9E2DD9ADE9E211F0ED29EEDB6D68C505087A80
3C7AE4C17C319028D60005982A7AE66BCEC6DB1F2D91384BE0CB92287BDE1973
FCFBBB31C392C2FA350566F2AB1E0520FD65B30FC8ACF9CFBE37F189ACEE3ABF
7C3051E47B1D5B615136FD551EC0810B688731717C96D67B8003E736752523E3
794F9AB3B9FB7D0531016330EA23A01401466B5E2BEA10801E12D5B20FB39A08
ABB24DC879A7C09C6D912BA4B9EAD5C2A1F73BDD819308E5CEAFB830598C7414
73C7F31EC57406736C38B77668C6E6F47CDE9BFBA7E06027140E6751F9DB6B13
AFBDC3FE2E18BE7EE3070F13F59B0906BCAD64009E79730AFEB277EF8D0FF946
ACC2422EADD1137A5E26A1F0D847BD16513> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
646.845 977.605 mo
(M\322Z\271\035\015+T6\032)sh
961.565 999.425 mo
1178.04 999.425 li
1178.04 941.225 li
961.565 941.225 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
961.565 999.425 mo
1178.04 999.425 li
1178.04 941.225 li
961.565 941.225 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
8474 <001C60D8A8C9B5EE310D0EB246B6BD50CABF9675FE1D13D0CD20E28CEB
4C4E12560591FEE31D958466BD8662E357D6FDC91CBE975A6FC45963BF9C3A87
8157E499EA78BC02EDEC338AC418F22794F4237E16DFEECACA83A695E9B9E9CE
D5CE2025F291F491DF9718FD99CEC4930F2FB7EAFA2B580E7BB918AF5BD8D6F9
231870B2E77D4D23CC6F6FF1A370C9A5E98BDC3873C571CFE9D38B5F3389BD6D
F91801A3624D92E25747E7D75853DE87BC543F5630A35804CEE0F73FD33B6743
92A92ED8AC9B95FFD6E7EFF8D36736E7A1D62E2A5A159271C656B5C88BD750E0
94E0A59710D2F8DB0054BA29E55684C3EEC837865348F7980D18FC808CA4EF2E
4F4EDF389EE4B7C1AD670BFE329705E99D0A71E08534119CE7E33F721CDB6EE1
8F71D4E0E1E3CADD1A450755BA570513FFCCBAA83F9E58A01FB8245D29B85053
26BCAD56D67BFBA242D50F780D944C044C7540F67F1D539640729568EECFC3F4
B5DCBD9B577224B693B56F85B1E4C4B725C78BF0492164C934CEC18F313E11E5
C7FCA2E76615C1A2341DB4BCD12DD38BEA1DFA397D42A15DE0E7AB569B9BDC07
AA> |
13487 <001C60D8A8C9B5EE310D0A45EEC3D2A8324AA4F740B269EB73BC95CB4
111037368D53A1C30DF56F3FE02670194C1300BE9541EE2F4BBFD1BF62A0B363
7C3D2580543D97F289718D6AFC55514732594E596B42A6C993B74C7DEAB82EBA
4F942E3E0F4A67214327273E384661660FD3E2AD2E4799B57257DF72FBEBE525
C800868749BFD9F43A69B13C412F48C87F5F7091A850DB2228AF2B7D80FACCEC
59166E0AACF137169FACFBD769BD3850ABAE60A57361B4210747BD4A82C45FE5
5AEAA8A9230321D4009A97A31B08FFEB73B47C590924BA2BED4896C765294CE8
E56BD66BF4D59AD32A687F7182C78872BD062B7FBBFB918BCCBBFAFAA8A9095E
5EF87DCBF808A2D539F74C97D3B88DE0B95833CC25C50EA8A8DCCEEC61066E3D
FBE888F6CA024F46107E6DC18BFD874E800D81762950C071BD3B532EC80310BD
16772709E48914B9C3CD65DAD98AC115BEA9C79D407406F207992FF61377B1F3
B13420C7E5279073D98C9BEC6829D0A70DD448DD08A13BBD912F26719A5D7D2B
91C1C449B8E00984F1D642DEA51DB6499DEE3136954D2603F7658FF82EA0BC3A
4C2EFBECC07D2ECA835A6A2E6BBA001F20CFAEEE97993BEF6FA54EBEA6393CDE
BD3FDCF8BBB20DFB6382C63DAE577085238E9D177A4B0267EE468503947C3144
97DA9AEB7BC58288C39E5236434F3CFDABD5CD33A064157F6855B4A63BB869FE
C0CA099CBFAEFC7B45BFAC755> |
16312 <001C60D8A8C9B5EE310D075E4F84934CACE3B92753426915EFCB7222C
12FC58895AE52CEB00579DD37EA499B8305E92EF276825D20F9A358BBCB3DAD9
A5A4FF4226415A81058945F2A8EFBB5433C9907A882EDA8C87EE3D613222E295
A8DF02E70E17F85362E1849DF87B7A6475B2B945014F1D8C1EC2D066743E76E8
F3C174847D499E9CE1211D14742BDD7179213B5FB618D1DA9FFC8915408E8360
D6280140E733B7FC4560FCD34FA3EF4586138104A9BDFCADE17DE08AD29D53C2
DE8EEAA982AA0E01BCC305FE7C717798A5C86D307EA313D0B806A59BB43331A9
C294D93B84A3CD0C124E5EC1A459E52BB76200AED218480305B40DDFCBD454B4
F351312B8FCB60945417F07C44176D2004F0724EDB4E93A61BFF57C553F5C512
49183B2> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1037.22 977.605 mo
(!\0324\257?\270)sh
543.845 167.525 mo
788.285 167.525 li
788.285 100.865 li
543.845 100.865 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
543.845 167.525 mo
788.285 167.525 li
788.285 100.865 li
543.845 100.865 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 5 GetGlyphDirectory
9724 <001C60D8A8C9B5EE310D64550593EDEFD9E0A8DA0151A897C9433EACE9
4E777ECCB42859CFA83FFA588FC41189B58DA8DA85233FA9C311B147C9D333CC
70B8190B2AAF3B30724B8D18B4FBA906CB140430AF507EC1B4E8EC7D72CA4471
A383F088C429A0FE44D0E7CE41185D0B952E189B3E073D6C7669A633915F9D37
47D9FE7722E15C5F4A36CFA074F96DF8BBB94E292B800B851AF324B3433DFC3C
9B09EE49A65E2EC7DD482FF393CEE7595CDD2A48FB6A7CE15D629430F6237E32
489591BC8A6E6A91490CB105189D75222511D3B357C8687F356E35489621FB6B
2130DFDD4E2334D690A5BDE78FD79C23D6FC76C019A198005A51F543214C5D57
0EE170DE361D946E8177E1729BF850> |
8324 <001C60D8A8C9B5EE31036205CFA233A0E13CDC26E5E84B3D3C55D53322
3D7E475E552B2C54072ABD1999C30DF0A69A00FDE59B8E3CB8ABEB39EA8DB61E
BFC169C8A32B96D6F008ACEA8D6403F9AC8BD469D679398A5AEC728215622596
F376BF28020729071C5B64691E54974B39802E9CDC5A9712F6CE59870C18DFB3
AF5A72AD03BA163139CD9CEB433E899197FDE9121ABD269FD25BCE3056B71D59
678DB03715B4DD473E3BD1D34FA6A2E0422FBCB9CEB05D927FCBC34D5947632B
FE857F3896E7846073EAC6B4E82D8447A3006BFDC5BC6AD29FEEA2EE886A50> |
10261 <001C60D8A8C9B5EE314854AE533FC69D1E8D79A58CC706871F2169236
56B2131FF7CAABB2CB76A3B514E07B06B3C38EACA29050C959CA9F812282F0D3
71C20EB09046A5D1CD3342213BACDED28E9591D3ED2E600556FEF629BBB08F1E
16EABB78FCCD33ABFE18F9FD5B1ABE597D1C10938485F7B4E331E5624C95688C
24D77A5A978DE998FDEEA5669D1ECB1E16FEAA559F0271B0EC468829DE344389
713BDAD815F3EB8900D0586C8D5AF51DD63D0C8582A8338E2239771319C52FD7
91D4F8332A76AFD46B342FB84763F3AFEADB87AF98CFE> |
17071 <001C60D8A8C9B5EE310DEB856844FEE124E31681C2ED0561D89703682
20E4DFDCBB6FC8C6ABF4EE20DFB972969DF9D3B1DC6208C0680F7335FE79C5C7
9059928F506AD2977F8631A69DB9869AE9550CDB88A3C3CCDA0832B3AAF914A9
D19E15DB2EBC89640AD3D63FF2A65D2CC68680170EFEF32F1DB375FA79B0EC5E
2FC331370C7B69EE46A7DB8D7D3724E0AF85DD002D640026CB9AFC5B390ECD8D
26F0081B5DC2B32E7B48DE3539129DCD7BAD17DB49DB170D1D5BDEC9DEC903A3
EFD5F91577ABE01C4DEA0D2855962CE7EB3E1FBDA2754B03DC9D5D5C76EE6F53
E2078E6A09FD03E4F9348657BD97BAB2C7C9976ACDF6D1BCB3369298B401E4A7
FB8C7AF5CE96AF78E30642EAE9750EFA20C1E1CED902151C7B84743542AC795F
03645D6F74316E517DB1652F48969F095AEF7E112A0DBD301CA97788AB5CE160
90333CF97E6F833E188FB985EA4712EF1DD6420217B1B7275159BAA0FFC691C6
3A8D685B29A5DE2AE88A7ACDBBCF15CE4E47ABE4D60DA54F19D875C5AAF7AE9F
FD1706F7AE389CC3DDF2A> |
16821 <001C60D8A8C9B5EE310D721B6606EB4A280E00D86FD61705CB3A42735
1A881A1EE331F55DF955E658A8486926A6FD743FBC541AEF367A96E112B367C9
28B65632E2796E2E647C68CB10BA989937E9CC5ED9D697EF19CE78DC36418530
84A447CE9B40406CCBE1D2D0CD7C927D5E0CB1C508B6F9D958666ED5F4B45014
FCA247DAF838ACBE334724A3F2F061A611D63F7C2DBFE0C7BB1C0CFA379273D2
D467EB40CFBBB166EDEFFA1220D3322B9377F52432B62FB9BE39168A8B4B3C9E
AF2D45D384F937E525A89020A5929E5E3EAAEA65A9CA033944EB871952E8F03F
91112D315AE4C33117C4662164793B5D75818750D508AC1D5B1FFC8FF4DF0A71
F696002323EF10C2FE86C5D043307A8957ADAA48FBA01DF74E346DFAA776E590
60274DB5905EDE72580E42DB19F1CD583CF7AEDD35F7559B5> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
590.025 141.465 mo
(%\374 \204\(\025G\023IuB\257A\265)sh
266.285 168.305 mo
510.725 168.305 li
510.725 101.645 li
266.285 101.645 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
266.285 168.305 mo
510.725 168.305 li
510.725 101.645 li
266.285 101.645 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
10936 <001C60D8A8C9B5EE31036F8E298194CFDA76C67D014FB23D37F3855A6
361E98E062D1CC8496FDB329419D23D800A2F5DA848C177FE75A85DFD2D378EF
876F1D5CAC15DDC64755613AB565C2DECDCE99EEEF6433A2D517F06E10B0020A
D27DF4FBA96942BA1AFC339886C727055A4E9999D30E58A4BE7CD4B170B37737
D25FE3CBFE69567CDB3788AD862AC92C6B165E8663C37EB3393D70D4A723EFA8
F89CAFE5C640CE6AFB309E311AE54734048DB648CE17903DF90A12BBADFCD0D7
9BFD3947B73C6D77976948167396B4993440B00BF14FBD7068FC1136E6269B73
1016A1F1F80ED25C69B2CE0668A8335134F143ABD2F1D8098D036C384F0EED52
456212DF29B05BFA6829C0C26A9FF11C49910B43C70E23E6A18CFBE9794EB714
74AF258E7EFF4B35924C9A79AA9BA1DD9C11519380969BB2D86A391A479AA257
E4C19D48AB7738EAB01A6AD069B724FB1F83A1833F0775C2843841E65985E1E2
F5C2D6BEAC6FF8E1C2E64E3BF5AE5DCFF743781F2EF43AF7BDBBA0DB4ACD14C7
172A916A0343E4E77A0D5F419> |
9099 <001C60D8A8C9B5EE310D1A3AD6FDD29C7AEB6C9ABDBAE2FF34C52D879E
C325E21FFC4428B069CA24F86C6447269FC589DA9ECD650D605E5A4113F32603
4A29B30B76FC255A72C340097BB8ACAB0FCC661E6D7DD77006F46A095EE06656
8DE885D53432AFD406EA406582ECA7B771D22CE72C33C2E68902A06117D77392
2122F0A32D839F23E5411194A8FF00B7560B11F4DE054FA6FB6C89CDDFBF9528
8150723E15348875C0C631BB24AD624BD1998B73627D6CE58FDC962365B9F5AC
9AF4177FCD351BA2DF3F56DFD5D6E72905B433988C787AD6CAD31ECDF7C2D94A
9D1FC4A11B7D9B8804AB5602787B14CA1DBFFECD6DEFDDC322E653AC659880DB
F0B5D7CB64EF88D86685DFA7C65DCB5976495D9734EFF5AB9CDA21EFC8F0AFFC
33E89E6C50A5C3CD880F55578F4D7042> |
17901 <001C60D8A8C9B5EE31039796ED20B80DF811874DA875955E28B05145C
0B44325392F679B579838BC6AC396AD989BD122891561D06487734912CC81830
148224F59765CE7725ED0D2F7C184EAA8DB5968BAD4FCE43394ACDB74D1364CE
01F6D88363F2C9D2A4227ADECDE6221DD894C54223E246598BC6E7D9A664A06A
7ECA96E14BAAF> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
301.605 142.225 mo
(G\023IuE\203 \204*\270#\213E\355E\203)sh
128.645 367.625 mo
1127.94 367.625 li
1127.94 264.425 li
128.645 264.425 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
128.645 367.625 mo
1127.94 367.625 li
1127.94 264.425 li
128.645 264.425 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
702.785 347.525 mo
1039.08 347.525 li
1039.08 280.865 li
702.785 280.865 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
702.785 347.525 mo
1039.08 347.525 li
1039.08 280.865 li
702.785 280.865 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 10 GetGlyphDirectory
8708 <001C60D8A8C9B5EE310D60904C7FAAD3C4C5FDB05896EBE94305260DC4
87A510DFC679F235CDE4002C26A82228B1CD8CD3C75A36467124A19BE8F83836
698B6D54A9231F14BA7E2D091CD31307A6FCF3C354B04A32BCD496E289EAB097
95E94472F4D9BE9E45FEA4BF46FA7B989781D1E277E5E91F2E2E3FCD0DC113F0
A817A9C2AE182F076CB09F18C9E4C660C4FB53EE99EEB121E5AE3F4171FF9542
CF61B70433132338E50C892957794CDA7407D5698F3501C38F23F63D46166724
D18C1426F269871A38C8D169C9015F18FD5C1121C249C7F965F68F33745F6A47
9D534B5A599E8533C00CFF6AE8648C5060D216F81BCE8DF85D63661DC98B209B
B3D4CCF3D4E28F21190001E6DAB7889CD0946CA50CCD32DD643B44513D196D22
CFFEEE4B33F1FEC1FE7140AE60249325> |
12935 <001C60D8A8C9B5EE31021BD80332827EC08AB40CFCF85FAC89DE99216
11F6840CD1066460270A0111BDE23D2463E4B9B378BFEBFAA4D215B5A984ED7C
858674F07F710BDBAE574337B4BF0269F70C402ACE38C41FC8A70907FE7D801B
3D78CE850192C3FFE0324956E24ADBFF162D3D94A5F523925A1721C8A0905378
06B28F8C174F87AF0BE5FB53BA617E8A8C970D430E537074A490D02DF8A46C5A
687BD1FD71D37C82F0BCC76CEB809157343E1FF253B1A9CC6EA4FC7D07F588A6
082351084B55FD23C83B690998FC38141DD4693F7005C125FE672D0C11F63ED4
1B18DFEE89B3F00DB96F2FBB34D32C6A5531710551C68D7594B26C9E11F78A16
6471C8821D8E243334CFBC8136C61C4417AD31B0C85D087AA622ACF8C7BF2A92
B2DF26F59106CC4267845D1B6A05C433C2B00C18185DCC69262D70387ED3620F
DDF91B9573979645BF4ECC0CBD66B3A8EB87B2AF3FB531A0C1B3269690004D9B
1C40E2C5E73D2306827E97CB680DFEA2687186CB988340E362735E3A8582E802
DD937FCB3DE2E59B36755B8C53C148660FEE6926DD7B69F22E8564383AB00C46
FF127AF3733D5A9FD9EC5C9A608B2C80F6BC04FCFAF3E257662E784C353BFBA0
B2125D4CB647C98A44EE1FA368E37D0981E52A43EB4B2A84ED4FA1639DF58C05
9BE7D659476EB21F8367E33A5E9181DCD445460C440489DCE5DDB318B22260AE
63307443F90FAF581900512F75E863267105BAB54510E2E1538F489694398019
E54BB3DF8635C415B0BEC281A8E60FA2C5BD38710DDF158CFC5F08474C34BC68
01BE491E828EF1061FE4C> |
13890 <001C60D8A8C9B5EE3103AC5E3E130447E0832D464008D4CE4D31B17F7
0BA5B8E741ED0D46281ADD80861DDFA437754733E8DA0AB5B272E16EC4804786
5240C8115CE567F24EFC865BED546B873C3D1AB5AF825AD83EB9417336780EBA
3EB7F1217185C31A2880A2617EB2A052AAA1CBCE5C0323188D98781964FA27AF
E9F108EA6089DCA66343C989D251528EE242014D7A4D7C9D31C1CFF174735DBC
DA07BE8630142F5D53EE3DC1C2EE67AAA1D052E0F164286C1EBA96BB2B3F0432
0AEF02C6AF30F82EB392AB6CBCD2CF392CA0892B6530A4E064C744B92E9CC379
B41B940DB00C9006991B9DD765189800EB79745EC5E523BAD68C9AA92C5F3069
C96FF9378DAFD836CC88C45F0FE5008A0A2FBB2768572E8C3A3022FA0E4461CC
860D9> |
8332 <001C60D8A8C9B5EE310D1011916FEC277A9872160F461D636F83EB8F27
0D63D78D4F3AE3FC35BC75417079F194C5AEBA9B50AE364191853909D7614549
A4F7C07674C615D4D1610BAB2FD7D4DDD3499664B773B85EA7E0E977CADC7113
EFECAA7C76E01BC7FE80C4394BBBFACE3E2F8BABCC75BE2FE459C7BD217D3B3C
4E54A7CB61EE60556EEA50F5451F1E9F138B79DF961A3AE21860D7E9BFD97800
C052C9BD493D266760093CC3EEA7B66EF77DD0E8DCFA550F9E9CDB4E31A94C0C
94DED709A761B17D424D985E69032596BE342F9DAE3570A658D18CA4ED8DEF84
D04A231746951581B0807C2B256E655298E8B8134B7E08A907AC419062C72456
782C748F735F86205A57A55B74A8091AA7B38FC35BAF58> |
8501 <001C60D8A8C9B5EE310D70B6A90B49981B4A45AC051A9FE7A072047FBB
3748428659AAEC2F5E371A498BE8AFAF953950BB92BAD88AC49323718D6C71DA
A0E4DD7E971061E85EDD91DD7958215B90FB95424FC7F5943CDD9422DE356140
C28F00CF64ACA38310C2BFBF93A34F1309C1CFC2F736C772A922708C3555A444
25C6FC7802009F85391DB7BBC349ED12341CF96D6DCF06659F24FD18DC46F58B
746A7CC2EF6FC46F656B6BFFE7E85F9973AB0AF5AB4DA181438B2B5580852C14
313FD9243288FC4566FD976B38D90B4397690E2CD8FD3404FE3044E44CB39BCD
8F3E8AB39D0C301DCC7644BF949084A8A919A1C1E468335CF6BDD674E91C57D2
BE28D86A6342C7B95E9B9162FD7A8DE1A1E3FF2CC2888A04C71A2DE45D6D2B82
289F715A86FAD2AE4D58D6AB652245F32920A54CD3FCD178C5B29084578B7018
7831F6E1A909F8815524113F1DDC1B88BB302E24FAC9B191F99CC12DFEF21B2F
352D69A865B2562BDF1B0AF0407101C1605F1D54BAAB20DB6BDB10180B0522B0
3C68781885DC8A889E4CCD636D1C610DBA8A4A114D0877265E2B52EC6F4DE93A
D9C903DCBF37E14CBA418EF83543F4EDA145DEFC7219620ED1BAC1418A843F38
62DA79AC5E7ACEE410> |
24351 <001C60D8A8C9B5EE310D075C8BAB8D286C6DF434C0D92196D1DD89B62
B2F0853AC9EF03FFC759B9ACE06DEE53FEA9F67FD707658FAF17B6BC790D3B79
26DC8920FEEE156B3B04235740A2BBAEF247590AA2DC42E52B3E02AEAC0C42EC
039C3C4FBFA948D8D3A778412B6EE7A4C7626D3BAF64F29BAA2A65495D0F13B1
EE63F232FB41B07AA4B01551939C7A07F8BE310B08EEAF2E3A9FE31B2ECF17E3
929C071FF98510CFA97FBBDD6E35D13E79233279B65B76C2B2CB32AF3514CDE7
A466D8D650482ABDAF145FA752E628A9942E8BC1B7A278670CCDA6CD0080D0FE
EE218DF137CAABE60E0FC21691260A9F55EDB71BAF1D6C2B02556CC4C82D17EB
BB972228246417283F7E5F71B8ACC3E84C5196FE93F95432CAB9B10803F2B822
25E21DA884EA7F88699BC7B3CF26E2904F33A304502698EA90FAAE5C86FE50B8
8F21E53F99844EA60DACB85B708A90BB57874756549ACA37F32B0B49B40963A4
22D7C7D0AE00787DA543919730C7849C6B00EEFFA45710BA38D933D6864F172E
D9C9F0EE97F61162DC57CCF576736C5256C885DA3E45923CAC462C92487B0DAB
8E6FC42BC72FC6E4A> |
14624 <001C60D8A8C9B5EE3102C723EA1C8027C726B15885F743D33BDCE900D
65415B683143FF256094D4A44B25E4D2338492F64F613AA57E0BF0A380922B93
56BBBF128C91A21E029B0CAFEF14AA4254DA35E8110F18030D006666ADABA022
234A57CCD5FAFFF4DD32A0B4BC8E4B4C29A7CE26F0ACFA8E53E663FF4633C0E6
3E1414C0396CBEE12B572398C83EA19E21D354125EA362BF2B830A1DE422C512
B7836697C1AD12F1AA2F97EE8712503E6FAA8B2D506E33812D26D80DC1D4F3BA
C394A88725C5D72361C2E4F20437DDB87250D8E4EE0DD21EA49D5A670AD137B7
776B60436475EEDB80C596FF7A87A56CD17B9AACC08A2EF952FE583B1235CF80
F2DB6A59DBBA2C5D15DFA95197DA87B3C2DD94884717130ED01DB14610FDA16F
4FFA655C94D8722489B8EA9FC947FDD66F1038D029A0FE3F1A2F075FFE8D1352
12BC9D205BA4E4638114B22A41CD193A88DC5052D1850B3A4D68279D3B942DEB
6FB089ED6672A8554F19B354BE30252485E593408B0B93B528DAD13727062387
CFE016D8175C85FD9BBB59E0F7801B5528C57130E8E7F3CBEE4388967E0D55B1
83AFE08D95FEC822050A817D40853C784097E30DAF806A139B976E2EBEB67E34
124B0B9C3E2358FF1536AC20EC540C1D395E3A3DFDCE1010A977DF5EC8C7164F
9303A1C81A6279F0484397C45FD0731666C54460EAC594BDE1A73E3D0AD18164
B8B679096A2C0F60DEF8A6F402B689AEB02362F0234EFBBCB9A8582552BD570E
6A635D809D0B56A6087FDF64727> |
11790 <001C60D8A8C9B5EE313BDF321EDFBD311EC395E5CA26C9337B1BC4623
1BFEC8774A89C7D81FD6DCBB12C7220679B01394A014490DE78B119165153CBB
947C306A0296476EC6D989172C6C9A4F4EEA2A170E78631C79DACB8E4F46F40B
93BEDA36000A42BA5610BE77D5098B7DEB2128F9B78AFE5D47B1DA8F4F180716
78FFFDFB2CB292CC2C15EB3DC46386F10829C7DBCF130F2FD3B332A72F28E9D0
6DE7DA52D414F8866D321A362F4922CE2E948536C2851141DD9C3AD696E1913A
AF28BBADEA8980BF07AA96F59AC73DAB8CF11ACF828A09DA7D53247076EB6551
CA60CB81C6736EE7975DFFE0039A1D099AB0CFC2E975D2599474587A9C05277D
73423A30A69CA51EF1C1573F5A90CEA36DE49087760B1AA74874E96> |
10905 <001C60D8A8C9B5EE3117DBBC4B8B754F6F4E3D88831B2316BAA8A087B
93941A073083E9613F69BBA956BD52ACD1E07F2F4AF4229428868483DAFD7828
3F6AD3EF1160B5B7FAF4ABF2A8B8818E8A9CC2D657E10D72A4EFB64D2486D132
A45C6B3C365C0DEBF6121E6AC1D4C149B199C5EEF1D1983293A746A9E664AF64
34D8A7D073C788459D4EC4E131369BE0EB1F5346F7819932E91E392B90D9817D
09F8C4CDE784B0169D9BF0F27D55C27CC699956A616D7E551DF028C2345B98E4
7ADC072DC0EC537D4EF6B815F196291175365F0B0DA3DCAB4F62C94C34FF1D95
34E2AFED8554E0CB54EDC06DA516CD045E70BBE1A39AA294A5A617D57D44D97D
4DD162A6A83150EA4331892591F07EA49F3FDCED718247FC79A6D0C1D8516A4B
153> |
7496 <001C60D8A8C9B5EE314DEB0D1E72BADC544BB2B6E9A687AA28F94BDD96
82496737CDA40503413553E6610D23699E7BCDDD905BE454D16F65F01480FC1F
A5FFF9FD9D00A1CF429B537B52FF14867D2DA9CB2465C496EBE9E77D55E2AB62
B46943F6E9FF4C6D823544EC48A30E4F62E76B760FF806C53E32E293A82845CA
04223CE3FC441152C0F46BEED1D818AA14B3E99AF7405A1BEC56047DA076E07E
60CBCEA8851DC1D20003E5F828> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
729.705 321.465 mo
(\(\025"\004#\2132\2076B \214!5_\0379 )sh
925.185 321.465 mo
(.\016E\203*\231)sh
990.453 321.465 mo
(\035H)sh
293.045 346.865 mo
629.285 346.865 li
629.285 280.205 li
293.045 280.205 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
293.045 346.865 mo
629.285 346.865 li
629.285 280.205 li
293.045 280.205 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HIBBAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3299c15522000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c7966b6a2b0670000e488000032da68656164f791f7bd000014140000
0036686865610dad0c030000144c00000024686d7478a1df130200001470
000045ba6c6f6361131c1fab00005a2c000034386d6178702cf025d80000
8e64000000206e616d6589c2c43700008e84000031157072657013672219
0000bf9c000024eb676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e0002affc000247b00000009000000004d53202000400000
1d390600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d0000010000000635c33072dace5f0f3cf500190800
00000000bbeb7ccc00000000d68dfa7afbfafd8009ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008c2040e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003ad
004700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000040400a103cb006d00000000
00000000000000000000000000000000046500a100000000000000000000
0000038000a1000000000000000000000000000000000000000000000000
000000000000000000000000000000000482006c00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000003c900a10000000002e000a10000000000000000
000000000000000000000000060600a10000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000003ed00a1000000000000000000000000034f0049
00000000000000000000000000000000000000000359001c000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000043400990362005a000000000000
00000000000000000000000000000000000006dd005a0601005a00000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000004340060
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003a3
0099000000000000000001d6009900000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000005130021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002ac004402e5006c024e
004402e5004802b80047000000000297002a000000000000000000000000
0297006c015e006c000000000000000000000000000000000000000001f6
006c0000000001e300230000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000046d008e00000000000000000000000000000000000000000280
004600000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000046d008e000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000>
<000000bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf018101810181018101810181
018101810181018101810181018101810181018101810181018101810181
018101810181018101810274027402740274027402740274027402740274
027402740274027402740274027402740274027402740274027402740274
02740274027402740274027402740274027402740274027402ed02ed02ed
02ed02ed02ed02ed02ed02ed02ed02ed02ed02ed037203f003f003f003f0
03f003f0044004400440044004ad04ad04ad04ad04ad04ad04ad04ad04ad
04ad04ad053d053d053d053d053d053d053d053d053d053d053d053d053d
053d053d053d053d053d053d053d053d05c005c006010601060106010601
060106890689068906890689068906890689068906890689068906890689
06890689068906890689068906890689071607160716071607b907b907b9
07b907b907b9080808080808080808080808080808080808080808080808
080808080808080808080808080808080808080808080808080808080808
080808080808080808da08da08da08da08da08da08da08da08da08da08da
08da08da098c0a370a370a370a370a370a370a370b430c500c500cff0cff
0cff0cff0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe
0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe
0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe0dbe
0dbe0dbe0dbe0dbe0dbe0dbe0dbe0ece0ece0ece0ece0ece0f7d0f7d0f7d
0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d0f7d
0f7d0f7d0f7d0f7d0f7d1026102610261071107110711071107110711071
107110711071107110711071107110711071107110711071107110711071
107110711071107110711071107110fb10fb10fb10fb10fb10fb10fb10fb
10fb10fb10fb10fb10fb10fb118d118d118d118d118d118d118d118d118d
118d118d118d118d118d118d126212621262126212621262126212621262
126212621262126212621262126212621262126212621262126212621262
126212621262126212621262126212621262126212621262126212621262
12621262126212f8137513e0145a14db14db15cd15cd15cd15cd1646167b
167b167b167b167b167b16de16de174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d174d174d174d174d174d174d174d174d174d174d174d174d
174d174d174d179e179e179e179e179e179e179e17f817f817f817f817f8
17f817f817f817f817f817f817f817f817f817f817f817f817f817f817f8
17f817f817f817f817f817f817f817f817f817f817f817f817f817f817f8
17f817f817f817f817f817f817f817f817f817f817f817f817f817f817f8
17f817f817f817f817f817f817f817f817f817f817f817f817f817f817f8
17f817f817f817f817f8184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a184a
184a184a184a184a184a184a184a184a184a184a184a184a184a184a1852
1852185218521852185218e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e818e818e818e818e818e818e818e818e818e8
18e818e818e818e818e818e8196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d196d196d196d196d196d196d
196d196d196d196d196d196d196d196d196d000100001a1b007f0005003c
000100020010002f00870000123624eb000100010000002d022200000003
00000000021000000000000300000001000e02100000000300000002000e
04b00000000300000003002404be0000000300000004000e021000000003
00000005001804e20000000300000006000e021000000003000000070076
04fa0000000300000008002a057e00000003000000090020078200000003
0000000a02a00210000000030000000b005607a2000000030000000c002a
07f8000000030000000d0e060822000000030000000e006c162800010000
000000000108169400010000000000010007179c00010000000000020007
18ec0001000000000003001818f300010000000000040007179c00010000
00000005000c190b00010000000000060007179c0001000000000007003b
191700010000000000080015169b00010000000000090010195200010000
0000000a0150179c000100000000000b002b1962000100000000000c0015
198d000100000000000d070319a2000100000000000e003620a500030001
04090000021205700003000104090001000e02100003000104090002000e
04b00003000104090003002404be0003000104090004000e021000030001
04090005001804e20003000104090006000e021000030001040900070076
04fa0003000104090008002a057e00030001040900090020078200030001
0409000a02a00210000300010409000b005607a2000300010409000c002a
07f8000300010409000d0e1820db000300010409000e006c162800a90020
00320030003100380020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
00650064002e000d0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e00430061006c00690062007200690020
00690073002000610020006d006f006400650072006e002000730061006e
0073002000730065007200690066002000660061006d0069006c00790020
007700690074006800200073007500620074006c006500200072006f0075
006e00640069006e006700730020006f006e0020007300740065006d0073
00200061006e006400200063006f0072006e006500720073002e00200049
00740020006600650061007400750072006500730020007200650061006c
0020006900740061006c006900630073002c00200073006d0061006c006c
00200063006100700073002c00200061006e00640020006d0075006c0074
00690070006c00650020006e0075006d006500720061006c002000730065
00740073002e0020004900740073002000700072006f0070006f00720074
0069006f006e007300200061006c006c006f007700200068006900670068
00200069006d007000610063007400200069006e00200074006900670068
0074006c007900200073006500740020006c0069006e006500730020006f
0066002000620069006700200061006e006400200073006d0061006c006c
0020007400650078007400200061006c0069006b0065002e002000430061
006c0069006200720069002700730020006d0061006e0079002000630075
007200760065007300200061006e006400200074006800650020006e0065
007700200072006100730074006500720069007300650072002000740065
0061006d00200075007000200069006e0020006200690067006700650072
002000730069007a0065007300200074006f002000720065007600650061
006c002000610020007700610072006d00200061006e006400200073006f
006600740020006300680061007200610063007400650072002e00520065
00670075006c00610072004d006900630072006f0073006f00660074003a
002000430061006c006900620072006900560065007200730069006f006e
00200036002e0032003100430061006c0069006200720069002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00670072006f007500700020006f006600200063006f006d00700061006e
006900650073002e00a9002000320030003100380020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e000d000a0048006500620072
006500770020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200063006f007000790072
0069006700680074002000a9002000320030003000330020002600200032
003000300037002c002000520061006c00700068002000480061006e0063
006f0063006b002000260020004a006f0068006e00200048007500640073
006f006e002e002000540068006900730020006c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020006900730020
006f00700065006e00200073006f007500720063006500200073006f0066
0074007700610072006500200075006e0064006500720020007400680065
0020004d004900540020004c006900630065006e00730065003b00200073
0065006500200065006d0062006500640064006500640020006c00690063
0065006e007300650020006400650073006300720069007000740069006f
006e00200066006f0072002000640065007400610069006c0073002e004c
007500630028006100730029002000640065002000470072006f006f0074
0068007400740070003a002f002f007700770077002e006d006900630072
006f0073006f00660074002e0063006f006d002f007400790070006f0067
00720061007000680079002f006300740066006f006e0074007300680074
00740070003a002f002f006c00750063006100730066006f006e00740073
002e0063006f006d004d006900630072006f0073006f0066007400200073
007500700070006c00690065006400200066006f006e0074002e00200059
006f00750020006d00610079002000750073006500200074006800690073
00200066006f006e007400200074006f0020006300720065006100740065
002c00200064006900730070006c00610079002c00200061006e00640020
007000720069006e007400200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
0074006800650020006c006900630065006e007300650020007400650072
006d00730020006f00720020007400650072006d00730020006f00660020
007500730065002c0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000700072006f0064007500630074002c
00200073006500720076006900630065002c0020006f007200200063006f
006e00740065006e007400200069006e0020007700680069006300680020
007400680069007300200066006f006e0074002000770061007300200069
006e0063006c0075006400650064002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e00200041006e00790020006f00740068
006500720020007500730065002000690073002000700072006f00680069
00620069007400650064002e000d000d00540068006500200066006f006c
006c006f00770069006e00670020006c006900630065006e00730065002c
0020006200610073006500640020006f006e00200074006800650020004d
004900540020006c006900630065006e0073006500200028006800740074
0070003a002f002f0065006e002e00770069006b00690070006500640069
0061002e006f00720067002f00770069006b0069002f004d00490054005f
004c006900630065006e007300650029002c0020006100700070006c0069
0065007300200074006f00200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020201c004c00610079006f007500740020
004c006f006700690063201d0020006100730020006a006f0069006e0074
006c007900200064006500760065006c006f007000650064002000620079
002000520061006c00700068002000480061006e0063006f0063006b0020
0061006e00640020004a006f0068006e00200048007500640073006f006e
002e0020000d000d005000650072006d0069007300730069006f006e0020
0069007300200068006500720065006200790020006700720061006e0074
00650064002c002000660072006500650020006f00660020006300680061
007200670065002c00200074006f00200061006e00790020007000650072
0073006f006e0020006f0062007400610069006e0069006e006700200061
00200063006f007000790020006f006600200074006800650020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c002000480065006200720065007700200061006e006400200061
00730073006f00630069006100740065006400200064006f00630075006d
0065006e0074006100740069006f006e002000660069006c006500730020
00280074006800650020201c004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065201d0029002c
00200074006f0020006400650061006c00200069006e0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f00660074007700610072006500200077006900740068006f00750074
0020007200650073007400720069006300740069006f006e002c00200069
006e0063006c007500640069006e006700200077006900740068006f0075
00740020006c0069006d00690074006100740069006f006e002000740068
0065002000720069006700680074007300200074006f0020007500730065
002c00200063006f00700079002c0020006d006f0064006900660079002c
0020006d0065007200670065002c0020007000750062006c006900730068
002c00200064006900730074007200690062007500740065002c00200073
00750062006c006900630065006e00730065002c00200061006e0064002f
006f0072002000730065006c006c00200063006f00700069006500730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002c0020
0061006e006400200074006f0020007000650072006d0069007400200070
006500720073006f006e007300200074006f002000770068006f006d0020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f00660074007700610072006500200069007300200066
00750072006e0069007300680065006400200074006f00200064006f0020
0073006f002c0020007300750062006a00650063007400200074006f0020
00740068006500200066006f006c006c006f00770069006e006700200063
006f006e0064006900740069006f006e0073003a000d000d005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000d00540048004500200053004f004600540057004100520045
002000490053002000500052004f00560049004400450044002000270041
00530020004900530027002c00200057004900540048004f005500540020
00570041005200520041004e005400590020004f004600200041004e0059
0020004b0049004e0044002c002000450058005000520045005300530020
004f005200200049004d0050004c004900450044002c00200049004e0043
004c005500440049004e004700200042005500540020004e004f00540020
004c0049004d004900540045004400200054004f00200054004800450020
00570041005200520041004e00540049004500530020004f00460020004d
00450052004300480041004e0054004100420049004c004900540059002c
0020004600490054004e00450053005300200046004f0052002000410020
0050004100520054004900430055004c0041005200200050005500520050
004f0053004500200041004e00440020004e004f004e0049004e00460052
0049004e00470045004d0045004e0054002e00200049004e0020004e004f
0020004500560045004e00540020005300480041004c004c002000540048
004500200041005500540048004f005200530020004f005200200043004f
005000590052004900470048005400200048004f004c0044004500520053
0020004200450020004c004900410042004c004500200046004f00520020
0041004e005900200043004c00410049004d002c002000440041004d0041
0047004500530020004f00520020004f00540048004500520020004c0049
004100420049004c004900540059002c0020005700480045005400480045
005200200049004e00200041004e00200041004300540049004f004e0020
004f004600200043004f004e00540052004100430054002c00200054004f
005200540020004f00520020004f00540048004500520057004900530045
002c002000410052004900530049004e0047002000460052004f004d002c
0020004f005500540020004f00460020004f005200200049004e00200043
004f004e004e0045004300540049004f004e002000570049005400480020
00540048004500200053004f0046005400570041005200450020004f0052
002000540048004500200055005300450020004f00520020004f00540048
004500520020004400450041004c0049004e0047005300200049004e0020
00540048004500200053004f004600540057004100520045002e000d0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e0061007300700078a92032303138204d6963726f736f
667420436f72706f726174696f6e2e20416c6c2052696768747320526573
65727665642e0d486562726577204f70656e54797065204c61796f757420
6c6f67696320636f7079726967687420a92032303033202620323030372c
2052616c70682048616e636f636b2026204a6f686e20487564736f6e2e20
54686973206c61796f7574206c6f67696320666f72204269626c6963616c
20486562726577206973206f70656e20736f7572636520736f6674776172
6520756e64657220746865204d4954204c6963656e73653b207365652065
6d626564646564206c6963656e7365206465736372697074696f6e20666f
722064657461696c732e43616c696272692069732061206d6f6465726e20
73616e732073657269662066616d696c79207769746820737562746c6520
726f756e64696e6773206f6e207374656d7320616e6420636f726e657273
2e204974206665617475726573207265616c206974616c6963732c20736d
616c6c20636170732c20616e64206d756c7469706c65206e756d6572616c
20736574732e204974732070726f706f7274696f6e7320616c6c6f772068
69676820696d7061637420696e2074696768746c7920736574206c696e65
73206f662062696720616e6420736d616c6c207465787420616c696b652e
2043616c696272692773206d616e792063757276657320616e6420746865
206e65772072617374657269736572207465616d20757020696e20626967
6765722073697a657320746f2072657665616c2061207761726d20616e64
20736f6674206368617261637465722e526567756c61724d6963726f736f
66743a2043616c696272693a203230303556657273696f6e20362e323143
616c6962726920697320612074726164656d61726b206f6620746865204d
6963726f736f66742067726f7570206f6620636f6d70616e6965732e4c75
63286173292064652047726f6f74687474703a2f2f7777772e6d6963726f
736f66742e636f6d2f7479706f6772617068792f6374666f6e7473687474
703a2f2f6c75636173666f6e74732e636f6d4d6963726f736f6674207375
70706c69656420666f6e742e20596f75206d617920757365207468697320
666f6e7420746f206372656174652c20646973706c61792c20616e642070
72696e7420636f6e74656e74206173207065726d69747465642062792074
6865206c6963656e7365207465726d73206f72207465726d73206f662075
73652c206f6620746865204d6963726f736f66742070726f647563742c20
736572766963652c206f7220636f6e74656e7420696e2077686963682074
68697320666f6e742077617320696e636c756465642e20596f75206d6179
206f6e6c792028692920656d626564207468697320666f6e7420696e2063
6f6e74656e74206173207065726d69747465642062792074686520656d62
656464696e67207265737472696374696f6e7320696e636c756465642069
6e207468697320666f6e743b20616e6420286969292074656d706f726172
696c7920646f776e6c6f6164207468697320666f6e7420746f2061207072
696e746572206f72206f74686572206f7574707574206465766963652074
6f2068656c70207072696e7420636f6e74656e742e20416e79206f746865
72207573652069732070726f686962697465642e0d0d54686520666f6c6c
6f77696e67206c6963656e73652c206261736564206f6e20746865204d49
54206c6963656e73652028687474703a2f2f656e2e77696b697065646961
2e6f72672f77696b692f4d49545f4c6963656e7365292c206170706c6965
7320746f20746865204f70656e54797065204c61796f7574206c6f676963
20666f72204269626c6963616c2048656272657720d24c61796f7574204c
6f676963d3206173206a6f696e746c7920646576656c6f70656420627920
52616c70682048616e636f636b20616e64204a6f686e20487564736f6e2e
200d0d5065726d697373696f6e20697320686572656279206772616e7465
642c2066726565206f66206368617267652c20746f20616e792070657273
6f6e206f627461696e696e67206120636f7079206f6620746865204f7065
6e54797065204c61796f7574206c6f67696320666f72204269626c696361
6c2048656272657720616e64206173736f63696174656420646f63756d65
6e746174696f6e2066696c6573202874686520d24c61796f7574204c6f67
696320536f667477617265d3292c20746f206465616c20696e2074686520
4c61796f7574204c6f67696320536f66747761726520776974686f757420
7265737472696374696f6e2c20696e636c7564696e6720776974686f7574
206c696d69746174696f6e207468652072696768747320746f207573652c
20636f70792c206d6f646966792c206d657267652c207075626c6973682c
20646973747269627574652c207375626c6963656e73652c20616e642f6f
722073656c6c20636f70696573206f6620746865204c61796f7574204c6f
67696320536f6674776172652c20616e6420746f207065726d6974207065
72736f6e7320746f2077686f6d20746865204c61796f7574204c6f676963
20536f667477617265206973206675726e697368656420746f20646f2073
6f2c207375626a65637420746f2074686520666f6c6c6f77696e6720636f
6e646974696f6e733a0d0d5468652061626f766520636f70797269676874
206e6f7469636520616e642074686973207065726d697373696f6e206e6f
74696365207368616c6c20626520696e636c7564656420696e20616c6c20
636f70696573206f72207375627374616e7469616c20706f7274696f6e73
206f6620746865204c61796f7574204c6f67696320536f6674776172652e
0d0d54484520534f4654574152452049532050524f564944454420274153
204953272c20574954484f55542057415252414e5459204f4620414e5920
4b494e442c2045585052455353204f5220494d504c4945442c20494e434c
5544494e4720425554204e4f54204c494d4954454420544f205448452057
415252414e54494553204f46204d45524348414e544142494c4954592c20
4649544e45535320464f52204120504152544943554c415220505552504f
534520414e44204e4f4e494e4652494e47454d454e542e20494e204e4f20
4556454e54205348414c4c2054484520415554484f5253204f5220434f50
59524947485420484f4c44455253204245204c4941424c4520464f522041
4e5920434c41494d2c2044414d41474553204f52204f54484552204c4941
42494c4954592c205748455448455220494e20414e20414354494f4e204f
4620434f4e54524143542c20544f5254204f52204f54484552574953452c
2041524953494e472046524f4d2c204f5554204f46204f5220494e20434f
4e4e454354494f4e20574954482054484520534f465457415245204f5220
54484520555345204f52204f54484552204445414c494e475320494e2054
484520534f4654574152452e0d687474703a2f2f7777772e6d6963726f73
6f66742e636f6d2f7479706f6772617068792f666f6e74732f6465666175
6c742e61737078004d006900630072006f0073006f006600740020007300
7500700070006c00690065006400200066006f006e0074002e0020005900
6f00750020006d0061007900200075007300650020007400680069007300
200066006f006e007400200074006f002000630072006500610074006500
2c00200064006900730070006c00610079002c00200061006e0064002000
7000720069006e007400200063006f006e00740065006e00740020006100
730020007000650072006d00690074007400650064002000620079002000
74006800650020006c006900630065006e00730065002000740065007200
6d00730020006f00720020007400650072006d00730020006f0066002000
7500730065002c0020006f006600200074006800650020004d0069006300
72006f0073006f00660074002000700072006f0064007500630074002c00
200073006500720076006900630065002c0020006f007200200063006f00
6e00740065006e007400200069006e002000770068006900630068002000
7400680069007300200066006f006e007400200077006100730020006900
6e0063006c0075006400650064002e00200059006f00750020006d006100
790020006f006e006c0079002000280069002900200065006d0062006500
640020007400680069007300200066006f006e007400200069006e002000
63006f006e00740065006e00740020006100730020007000650072006d00
690074007400650064002000620079002000740068006500200065006d00
620065006400640069006e00670020007200650073007400720069006300
740069006f006e007300200069006e0063006c0075006400650064002000
69006e0020007400680069007300200066006f006e0074003b0020006100
6e006400200028006900690029002000740065006d0070006f0072006100
720069006c007900200064006f0077006e006c006f006100640020007400
680069007300200066006f006e007400200074006f002000610020007000
720069006e0074006500720020006f00720020006f007400680065007200
20006f007500740070007500740020006400650076006900630065002000
74006f002000680065006c00700020007000720069006e00740020006300
6f006e00740065006e0074002e00200041006e00790020006f0074006800
6500720020007500730065002000690073002000700072006f0068006900
620069007400650064002e000d000a000d000a0054006800650020006600
6f006c006c006f00770069006e00670020006c006900630065006e007300
65002c0020006200610073006500640020006f006e002000740068006500
20004d004900540020006c006900630065006e0073006500200028006800
7400740070003a002f002f0065006e002e00770069006b00690070006500
6400690061002e006f00720067002f00770069006b0069002f004d004900
54005f004c006900630065006e007300650029002c002000610070007000
6c00690065007300200074006f00200074006800650020004f0070006500
6e00540079007000650020004c00610079006f007500740020006c006f00
670069006300200066006f00720020004200690062006c00690063006100
6c00200048006500620072006500770020201c004c00610079006f007500
740020004c006f006700690063201d0020006100730020006a006f006900
6e0074006c007900200064006500760065006c006f007000650064002000
620079002000520061006c00700068002000480061006e0063006f006300
6b00200061006e00640020004a006f0068006e0020004800750064007300
6f006e002e0020000d000a000d000a005000650072006d00690073007300
69006f006e00200069007300200068006500720065006200790020006700
720061006e007400650064002c002000660072006500650020006f006600
20006300680061007200670065002c00200074006f00200061006e007900
200070006500720073006f006e0020006f0062007400610069006e006900
6e00670020006100200063006f007000790020006f006600200074006800
650020004f00700065006e00540079007000650020004c00610079006f00
7500740020006c006f00670069006300200066006f007200200042006900
62006c006900630061006c00200048006500620072006500770020006100
6e00640020006100730073006f0063006900610074006500640020006400
6f00630075006d0065006e0074006100740069006f006e00200066006900
6c00650073002000280074006800650020201c004c00610079006f007500
740020004c006f00670069006300200053006f0066007400770061007200
65201d0029002c00200074006f0020006400650061006c00200069006e00
200074006800650020004c00610079006f007500740020004c006f006700
69006300200053006f006600740077006100720065002000770069007400
68006f007500740020007200650073007400720069006300740069006f00
6e002c00200069006e0063006c007500640069006e006700200077006900
740068006f007500740020006c0069006d00690074006100740069006f00
6e0020007400680065002000720069006700680074007300200074006f00
20007500730065002c00200063006f00700079002c0020006d006f006400
6900660079002c0020006d0065007200670065002c002000700075006200
6c006900730068002c002000640069007300740072006900620075007400
65002c0020007300750062006c006900630065006e00730065002c002000
61006e0064002f006f0072002000730065006c006c00200063006f007000
69006500730020006f006600200074006800650020004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
720065002c00200061006e006400200074006f0020007000650072006d00
69007400200070006500720073006f006e007300200074006f0020007700
68006f006d00200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002000
6900730020006600750072006e0069007300680065006400200074006f00
200064006f00200073006f002c0020007300750062006a00650063007400
200074006f002000740068006500200066006f006c006c006f0077006900
6e006700200063006f006e0064006900740069006f006e0073003a000d00
0a000d000a005400680065002000610062006f0076006500200063006f00
700079007200690067006800740020006e006f0074006900630065002000
61006e0064002000740068006900730020007000650072006d0069007300
730069006f006e0020006e006f0074006900630065002000730068006100
6c006c00200062006500200069006e0063006c0075006400650064002000
69006e00200061006c006c00200063006f00700069006500730020006f00
720020007300750062007300740061006e007400690061006c0020007000
6f007200740069006f006e00730020006f00660020007400680065002000
4c00610079006f007500740020004c006f00670069006300200053006f00
6600740077006100720065002e000d000a000d000a005400480045002000
53004f004600540057004100520045002000490053002000500052004f00
56004900440045004400200027004100530020004900530027002c002000
57004900540048004f00550054002000570041005200520041004e005400
590020004f004600200041004e00590020004b0049004e0044002c002000
450058005000520045005300530020004f005200200049004d0050004c00
4900450044002c00200049004e0043004c005500440049004e0047002000
42005500540020004e004f00540020004c0049004d004900540045004400
200054004f0020005400480045002000570041005200520041004e005400
49004500530020004f00460020004d00450052004300480041004e005400
4100420049004c004900540059002c0020004600490054004e0045005300
5300200046004f0052002000410020005000410052005400490043005500
4c0041005200200050005500520050004f0053004500200041004e004400
20004e004f004e0049004e004600520049004e00470045004d0045004e00
54002e00200049004e0020004e004f0020004500560045004e0054002000
5300480041004c004c002000540048004500200041005500540048004f00
5200530020004f005200200043004f005000590052004900470048005400
200048004f004c00440045005200530020004200450020004c0049004100
42004c004500200046004f005200200041004e005900200043004c004100
49004d002c002000440041004d00410047004500530020004f0052002000
4f00540048004500520020004c0049004100420049004c00490054005900
2c0020005700480045005400480045005200200049004e00200041004e00
200041004300540049004f004e0020004f004600200043004f004e005400
52004100430054002c00200054004f005200540020004f00520020004f00
540048004500520057004900530045002c00200041005200490053004900
4e0047002000460052004f004d002c0020004f005500540020004f004600
20004f005200200049004e00200043004f004e004e004500430054004900
4f004e00200057004900540048002000540048004500200053004f004600
5400570041005200450020004f0052002000540048004500200055005300
450020004f00520020004f00540048004500520020004400450041004c00
49004e0047005300200049004e002000540048004500200053004f004600
540057004100520045002e000d000a00000000>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0401f162326460f15010f151f150245ef15018600030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb80800524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf1002
0f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e313746
0f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f
0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110012001
0308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b73
74745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb1000243545841ff02840064028300640282006402810064028000
64027f0064027e0064027d0064027c0064027b0064027a00640279006402
780064027700640276006402750064027400640273006402710064027000
64026f0064026e0064026d0064026c0064026b0064026a00640269006402
680064026700640266006402650064026400640263006402620064026100
6402600064025f0064025e0064025d0064025c0064025b0064025a006402
590064025800640257006402560064025500640254006402530064025200
640251006402500064024f0064024e0064024d0064024c0064024b006402
4a0064024900640248006402470064024600640245006402440064024300
64024200640241006402400064023f0064023e0064023d0064023c006402
3b0064023a00640239006402380064023700640236006402350064023400
6402330064023200640231006402300064022f0064022e0064022d006402
2c0064022b0064022a006402290064022800640227006402260064022500
640224006402230064022200640221006402200064021f0064021e006402
1d0064021c0064021b0064021a0064021900640218006402170064021600
64021500640214006402130064021200640211006402100064020f006402
0e0064020d0064020c0064020b0064020a00640209006402080064020700
640206006402050064020441ff0064020300640202006402010064020000
6401ff006401fe006401fd006401fc006401fb006401fa006401f9006401
f8006401f7006401f6006401f5006401f4006401f3006401f2006401f100
6401f0006401ef006401ee006401ed006401ec006401eb006401ea006401
e9006401e8006401e7006401e6006401e5006401e4006401e3006401e200
6401e1006401e0006401df006401de006401dd006401dc006401db006401
da006401d9006401d8006401d7006401d6006401d5006401d4006401d300
6401d2006401d1006401d0006401cf006401ce006401cd006401cc006401
cb006401ca006401c9006401c8006401c7006401c6006401c5006401c400
6401c3006401c2006401c1006401c0006401bf006401be006401bd006401
bc006401bb006401ba006401b9006401b8006401b7006401b6006401b500
6401b4006401b3006401b2006401b1006401b0006401af006401ae006401
ad006401ac006401ab006401aa006401a9006401a8006401a7006401a600
6401a5006401a4006401a3006401a2006401a1006401a00064019f006401
9e0064019d0064019c0064019b0064019a00640199006401980064019700
640196006401950064019400640193006401920064019100640190006401
8f0064018e0064018d0064018c0064018b0064018a006401890064018800
640187006401860064018500644180018400640183006401820064018100
6401800064017f0064017e0064017d0064017c0064017b0064017a006401
790064017800640177006401760064017500640174006401730064017200
640171006401700064016f0064016e0064016d0064016c0064016b006401
6a0064016900640168006401670064016600640165006401640064016300
64016200640161006401600064015f0064015e0064015d0064015c006401
5b0064015a00640159006401580064015700640156006401550064015400
64015300640152006401500064014f0064014e0064014c0064014b006401
4a0064014900640148006401470064014600640145006401440064014300
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f
5e0000>
[13019 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 770 94 <00010047ffed0363052100490128b0852b58b90041ffe8b40f10014c41b8
fff0b30d014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d
41b8022c402b32401314014c324011014d243224320c1b180f10014c1b10
0d014d1b1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d
00b8ffc0b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb01
270037000a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c37
113711163cb8010cb5411b05295316b80129b10556003fed3f123939ed11
39392f2f2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b
2be12b2b2b2b2b31301bb1372eb80127b26c110ab80126b76c3711371116
293cb8010cb76c411b0529530516b80129b26c055600183f2b3f1239392b
1139392f2f2b2b30315901140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e060363
4377a15d416f573b170b04080c080e3350714a385d43243252696e685233
3b6991542b574d3c1306040203060b070b2f445d3a3650341a32536a6e6a
5333016b5b8e633216202218251f161d12072228231e375033374e3b3133
3e54714f517f562d0f191f130b111813121c13091c231d1d304225364e3c
32333d537100>HIBBAA+Calibri AddT42Char 
3 4112 258 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>HIBBAA+Calibri AddT42Char 
3 4532 271 <00020099ffed03d50571002a003d00b6b0852b58b53f3f010a2136b8fff6
b30c014d36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36
b801f8401b152b120c014d2b200d014d2b180b014d2b1810014d2b100f01
4d2bb8020a400900150a363521040530b80105b6264a1b46104c39b80105
b1054d003fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b3239
31305d1bb70a36352104052630b8010540096c264a1b46104c0539b80105
b26c054d00183f2b3f3f3f2b12173930315901140e0223222e022715140e
0223222e023511343e0233321e0215113e0333321e0207342e0223220e02
0711161633323e0203d53363905d2b4946462708121b15141c1206071320
1819201208284b484828628b5728ae15345640203e404527447c433e5837
1901e775bb844611263a296e080c070404070c080538080c080404080c08
fde5293823104e83b0754582643d122a4232fe9953573c637b00>HIBBAA+Calibri AddT42Char 
3 4888 272 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>HIBBAA+Calibri AddT42Char 
3 6654 286 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>HIBBAA+Calibri AddT42Char 
3 7036 336 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>HIBBAA+Calibri AddT42Char 
3 7930 364 <00010099fffa037c0571003400b3b0852b58400c3f360129310131401201
4d31b8ffd0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0
b30b014d31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8ff
f6b30c014d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c
014d0016220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f
10f12b2b2b2b32e02b2b2b2b2b31305d5d1b400b220b0528491c46114c05
4c00183f3f3f3f12393930315925140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>HIBBAA+Calibri AddT42Char 
3 8268 367 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>HIBBAA+Calibri AddT42Char 
3 8418 396 <00010099fffa02a703ca00330086b0852b58b4703501260fb8fff6b30c01
4d0fb8ffe8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f8
4012004013014d004011014d00200d014d001a0ab8012540092b4a260f15
2049154c003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d1bb12b
0ab80125400a6c2b4a260f152049154c00183f3f1239393f2b3031590114
0e0223222e0223220e020711140e0223222e023511343e0233321e021515
3e0333321e0602a70206090808171d24151930353a230812201918201307
06121c17161d100725413a391d0d21241d0c0403010362161e1109090908
142e4c37fdb0080b080404080b080384080b090303090b08833644270f03
080a0a090e1b>HIBBAA+Calibri AddT42Char 
3 8694 410 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>HIBBAA+Calibri AddT42Char 
3 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>HIBBAA+Calibri AddT42Char 
HIBBAA+Calibri /CharStrings get begin
/S 94 def
/a 258 def
/b 271 def
/c 272 def
/e 286 def
/g 336 def
/k 364 def
/l 367 def
/r 396 def
/t 410 def
end
HIBBAA+Calibri /Encoding get
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 107 /k put
dup 108 /l put
dup 114 /r put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/YDWHRV+Calibri /HIBBAA+Calibri findfont ct_VMDictPut
/YDWHRV+Calibri*1 
[83{/.notdef}rp /S 13{/.notdef}rp /a /b /c /.notdef /e 
/.notdef /g 3{/.notdef}rp /k /l 5{/.notdef}rp /r /.notdef 
/t 139{/.notdef}rp]
YDWHRV+Calibri nf
YDWHRV+Calibri*1 [21.72 0 0 -21.72 0 0 ]msf
334.465 320.765 mo
(Stackelberg)
[9.96948 7.01575 10.4039 9.18762 9.14417 10.8167 4.99548 11.4028 10.8167 7.27612 0 ]xsh
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
8793 <001C60D8A8C9B5EE310D0EB2715AEC3FC18462889DE3BBAC55C39DF54A
FCEA9B49EAAA3CAA3C0997DF47F0F2146378860A9D7D3B75460B825E435BF8B5
A7B2FB41FCCDF836D32519DB62D9E882E53D90ADD3068E2026077EE70A23A163
E9D8A12237DA6C7B4A79F9EC9C4D517ACC40DBBACB181C899E6FD331C2379D2B
E63C497D87B3EDAC76B39C76602F318B4D8C1611BBA54B0242838B9C254AD4DF
68E3D7F6FCB9349A8279DA1457778EA8A1CB3400D4DBAE296A1BEC2BF6E6F07F
6F4D951EF023B52D4DCD6BF498060F364771787378481099CD40913387254D33
E9567FA4F4CAC743685C5CA8D8E4BEFFDA0DFD9E053F7F8F6C1048BF089C7DBC
625B2E2972E576CF5EAF962B34677FD4AA3B64E190E87F1E84B436F51711412D
3209A1F0777030EB6B62FE8EB4E4F4E3C5A62B6553675D685228528205C3A9AD
67224FEA336E5DA83B7A1D2AF2057DA48239B073B54AB61BB759791A6344D0AB
DD3A158D4E368EF392368DC60F670DB18DFEF0C8E16DACB6027F8B304D1BA5CF
339827164FEFFB366E5E2940B8B272DA194EA81A1F0FD9A604040585C733A865
94BD82AAEEAF08468C781EB49046553B199F431B8373C56909558B6B56826DA1
26565B132BE90A161F1E49534362C5CBE39BB6F5954E9DB483345AC7D4FE39B1
9EEBB47E9C989B3D062D2E22447DA02013993EB0A7E4B676891A51B5F871A464
86> |
11783 <001C60D8A8C9B5EE310DE3FD711A9EF38E06E3D3DE3434D79DD269E1F
73FB28FD27682433CA9CE078786914226AB1F3C7AD60911284050A1FC06B3E98
ECB49CB76B742AC5E9126AD621CBA62F1286D680FB31B39AB8FCB81CB61C48CC
967B4B0EEBE8C70958E89C7110F3FC046EF9C94765846220BCC4505BADF34BA5
7B094EEF0FADC00FFD9CB2E6DE4E55DB857815BF77AAAA0D174768182C78E075
4F16E927185E6F1AA01AC9BF48EE041B31CE714CDCC6D6780F73C0E9273ECCB4
B87C57048D97EDDB74F2B9E92D8EDEDE6C2935E8ABF99A0897AD571BB95CE8D8
FCF759351A2E54A34AC886E07BDF3C0C13D876FD1CDD12DD45E2EC3D36245CA2
2D9942C1D23A212E795A42EA040325EE4945978BBE99F633D18B056468768202
94535983AA053CC61DDC94D69C57F214D699865C1BDCE91D053035A0461C6BC5
C6016B0F5494EEA6A4A99FC0BA470283B266225BF8CF49766AF9FE7F2045990B
27ED8469DDD9F288E0799BD98281634C4555300344389EE9D5BF62E32EE5A419
7FD13B50EA956CB0F0216DC203CE9D38A05A242873A113C87C942CB3BC2BD6A7
A51554A98AD2EE0045B9881E6A41F2B3D2B> |
9866 <001C60D8A8C9B5EE310216EDC95E5D83CF00E8004319D53C2CA800F754
C8A3511E8B1F17E92148FD3967430C39588C64D3F298100D3A54015AEE801D83
2CF6DF754998ADBC6AAACD8DAE3F55F49D2ABF36ADFF2A0A445C8D690E957823
6E273AACDDEB568F54F9EBCEF44B10A49F67E09BBC4E0B2FC5832B3C82C562FB
985E263326FF892662B6E997250835B5468D0E4F5D223624EB71127045AAF5ED
74676AF900781A584B29E87E27D01F55A80F0070A63EA480DD28AC6A0CE59046
B939C097F2950041B5A59732F0DEAEF7DBFF18F4B6C3A435D1B38D88855E5173
506A70400562D1703AB12A01EA71A1C91C96939C7B1A0EDF41004C6AC2E84233
03FCBCB8A7E6689392396DFDDC0BF2751254A1A37EB1D99A99C5D0036BF77315
C7E806D6F5B9713277300E4757FC148DD34140271D394C92A696C0E4548CA7DE
C43E42F97B381C7C6A21C860F732D8CAA0945EBF3B73D74A480BEF827A505015
46C784191F94422882D18AF6A9162E9ECB7CA17A145714EC6A157F7DD66A975A
6BA21406789119FD286F24E585FB70DD41442B1346ABC6B7F564B9D978D7887B
D4169E73ADDDF0E59FEF7FFA656E50D77EE82662480E0C52B3C9BFED7FDBDD> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
435.685 320.765 mo
("Y.\0079 )sh
500.953 320.765 mo
(&\212E\203*\231\035H)sh
31.0848 641.225 mo
293.045 641.225 li
293.045 535.985 li
31.0848 535.985 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
31.0848 641.225 mo
293.045 641.225 li
293.045 535.985 li
31.0848 535.985 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 1 GetGlyphDirectory
7432 <001C60D8A8C9B5EE31031EB1D734BEFDA662AA6FE0DAE286D99A903CA8
83A74ED3A975CBE65B3DC60EBDEF39E2B74DF06FE880FF87A6CD85AB7270DF8A
D8E54791BE0B0A4CE4F03B994F99F117303282C36C864C398CA072E0713ADD9A
96D8505DEF7ED4BE9917B83E2284151A0CCDDE158F1BDBA421DE2D6A69131B4C
824EE25C0A689E7902E7E1E633ED84> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
129.465 569.805 mo
(J+\035\010I\337)sh
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 7 GetGlyphDirectory
13374 <001C60D8A8C9B5EE310D1EC8B8B571D3ED885AE367CE638D5B9A3D791
4671583E23113BCEEB7F94B9B79BBD43E60B47D648DCFE34C58B8FA269AA771A
798E180D84520FCC0BC063B466766DC04DC6A4EE0196ADED6F2D5298601DE285
7B6B2B37AE2F555A8B2F1B989544C55C729F38297543D8F5F0F4448FCA416B93
6C850E8F5B9E6DB2A8DD0C3FA10ABCF70EA5AA434C7AB665DDB15750BB5B9E55
81FF14A9F0813A03D06BFDAD328300E5212142E4F6E4E5EE551C34B902F14F5F
7739D2A278E64EC5483EE5118E056726C8A512EBD9DF5127ED14CCDC0C83B033
AE098FC016EDD79C6AB3CA7ED1B8DFBD6518F3654DE7A99EA9E92EB1033635DD
5A2D23D3623E30D7E8CDAA7D2E5B9842325FEB95FF46F69395DFF096F5022314
A833202A7CAA5081D82A4F0058C9BDF841AD9649BD3B062659C99CCC36CF7878
6B20EE7AED4D07E02CA6E8B> |
11675 <001C60D8A8C9B5EE310D8D455459B3867CD6164E57D11272382C6EFA5
4E98BF0A286290C9C5FBBA748D51A5FDC50395F43B514964B8190DDEA3205083
9EFEBF12546E63466B7F7A4E96D431B85A80CA92DA70EBDD71497E287653DCDD
FB516DA321F854BAD14098DFDAA0906395EFB877ADF0FDE048D8611E87FD3D37
C0FA31C76C4E6F430F425D046CDE79ED5E92DCD1C52B1CF22829C7624F1EDF94
A197C21827E50F69AE26E0073E28B6498C0DFFEEAE681CF0106BE61E5B6D1CFF
B3EE91D3A4C5D82BBE7CD4B6D31B0CADC759DBE8BD8B1035967118AC19AEE48F
4CFC12BF421276DFDBA191E846A06EC887A2F5057411F103554D619E74C920BF
F4B5EC4896256E3AC31CE5D0AA37DE643B9881F9F73EC4EC2776625CEBB1A028
57F1E24E70C3EEBBA0F35B4AC5B11F6894F4807EF77A2238CE199C539055CF8F
4F8A0636D3641B1184B15BE61B3396AE8ADB1C80D0B39D4524EB9171188610B8
C544541CCC035ED84> |
11633 <001C60D8A8C9B5EE310D3901A9F213306B09C7DF7BC21C816A426D221
6DA76AB6A0825B94D38EC80F5736EE2832FD16F7B532A2097AEEBF49D8100792
D360244ABD769C4471FD2074291EC7812C4F6E7181099D37D9A3DACE8A3757D8
0355B2378D0CB2152D72AA9CCC4D20CA8164C3EBBCFCFE80FA4B6A5FCBB2930C
2AC862598> |
15496 <001C60D8A8C9B5EE310DC0297F385F969688642B151C8E9F20EA94DC5
B1CA17B45445E1EB043D9AD1BBB633810D7449CD013121526AA9CE9357EB63CE
F885E0804A83A292584736542A917E803875AC6D57CCC95220D4C410F8689090
FA539A7A8A8C4DE60018FDA7B85E2721F9940A3343B3990BC0972C7936F45A49
129CF1E240A89FA98D43CBF3C5662FEF28A028F96F76A1CCC046B57214153862
E8893F7847409A84B29310F25FBD6B918BC8649B4A24CDD89433F945C3DB1706
447091905303530256648C8B8E099491D9C64C8D842286A42981F4FBED996030
7C02E5EDA064BCFBE528E1AAF8AB2E54877EFC8333F8C35B1C97447C2F8235DC
B426FE7A0680364720B93AE9DE318D324FF1A9C06426BC4384331043550939AA
E0F1CC4579B3AD634CA7F2E56A76220937C2357FAF9317036458D4DC13EFBC3D
27C76CE931872D1765C75968D98BAC350CAFA776D1F704714B61E19275EE8638
DADCF0D19B9D66F5A10B73ED06BC44723AE96C83CBAF99264D767B053C3CAC10
F2F960347DC83F6C451AE9BDDA8C78AD86BF1F0C493F911999BB8B830A187382
57F> |
11000 <001C60D8A8C9B5EE310D0A5AFF28738D4FAA838BC56774D72EFE1419B
D91423402E3E668A284A4046816DA9866F05869A6EB0CEEBEE62EF12EC25CD62
BDADA58C225573BD8999B412DABC4F2EE7810710D095532950360324476BBA2A
34E884DF889632C4362A25EFE73184F7A1703177B55E5AB597799927E9E904B4
47C4DA6EA500646DC07CF847A11933F6A6A9799678F2466A62095BB6CB828AE9
778F267978AFC26B9F41F53616E924A7666A6DC4C410EAD6AC4EAD404524F316
2FA17AE81F1A968CE1C3ACFF548D53938572601AFDB92C1DE8462E5A7903ABAB
B32BC8A77C5FBA5E4E6C8753D8A9754E106844129570A36ED0732F04DF877BBC
32736DD73E19A5D61F87B38271A3EDBE2063AB5207326E419C2> |
11521 <001C60D8A8C9B5EE310319D88E57402BE4631763DEF4E80DF92473DA7
664FCD5C18A992BBAEA1FD02ABD3B9A66B01A8F5351E1DFFDB3329C98502CA5C
EFE43DA126DE8A75C60EF17DDBD42F34A8AAC23771F76E059D527B2FE4CCF427
B936EAB385FACCA88B3D4E63321E9055B7DF0343CC6893A353ACEC0FC42F3E55
FB8400E48DF3C531BE992252050210A018E57631038BE95F66D5042274AC4BA6
D24A4017E3CCBC3A85A9C402511F517D85C5BAC797D8EEF974D945E4013593CD
EC709612B25CDB22F21968B50577F69CD219DF07F2C2E43A10C3E6450D8F0EC3
72AD49A71B3784E7582> |
9785 <001C60D8A8C9B5EE310DE38EAEBC3B1118753A34A3393136B55D39C727
B32C645AFE42DE523F7211AE5C38BE0A8A5B1220805CF63A7AAD947E233A36C5
3139818DF94F1FE8C0B969E72F89CF855683F382CC292427E939BACACF8B199D
D46B98DDC2F64FA0C1413EEB10184B39F7A8675B0B77D6D3FA4936BABF40E32B
60F958BF86DA7B0DCCBE95A719F7881006EC548584A216007EF068E67AA60A64
ECEB1E7F62AAFADEB50204DDD1C4933ABE37923F560B07A45457376098D2160C
DBD63E86552673F60C7032FB4C898D3A5EA40CA4496AD13E04F357C156193DF1
C0C574FC8191C6B33ADDF17423AD0B1EB013807FF740DD0E3D70D5BD4DC8FECE
D18D069E4AABB8D2C111214FC97004849B02C37B18C7DE5BF4B35339167F626F
A140BFC9D45917117358E771D991DE28D6B3710975151DC157CC89EC438CF858> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
42.5848 595.905 mo
(4>-\233-q<\210*\370 \214!5_\037-\001&9-\001)sh
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 7 GetGlyphDirectory
15329 <001C60D8A8C9B5EE310D7A9740354DE6E04B50E532A39FEEF0FA08097
888FE6285569B8E009B361329AF16BBA7C0F3F13E71A9AAA76959861FB0BA680
5782225BF116B3BA1415918119A75514BEBA326B7C1C9298FE999C27DD7A1EB4
6B22E6D4940FD114DA92E6FE4F1873EAA9CE140B02102A18F1B93D7D2DDA572D
8C87FE17A4BEBEC3335C62B90A3B362F16F1D9868CB87C54D7778B75B9EFA8DA
B79CDD564E15672F9280396D804A96D6C0D7846AC91467FF26488A97CD5860D9
A9878A0793BA177A667AE1D7ACE5DFB3BE69401C69DEE76CA3FB0C9480A6A0EF
9583E2A60650FD194F75395DB28FE5573E2845D50E6F6C69666A46AA4C958855
C856AC632B356395A634208D42EEE589D674240AD6FD16DA02AD238FDC4275C2
EE37B41699F01D2EB64B37454672A5C6D82FBF6558B13BABC6E3A687DB1CDC6B
B738CF400534DDD> |
8615 <001C60D8A8C9B5EE3102B2126A82D8A248D1BFD01A9109712D0157ED71
62CA28ECA8777D059F98C1836FB623F03FAB3CE4C8897D6BF0D74775EE515D72
E5AD327247D2F7EE93A91FA61AF7C6C857F31687AEE60429F9F0CCF20D71BD33
1BD2135A0F65FFE1FDC13572AE6E3CD6C3F52B37A2E0866EC41BF36D918D9AE4
6AB9BFA23926E71949378B9EE632DD69E239376E55F6410DCDAFED651718C0CD
1E045E14E7ACEFB682EA626F42A6E64C648D7379D1899C616120807893BCD974
2B7B767685327368F3580535553BDA5DCFDE079A7897F2FC6F29D643DCA0DC0E
AC52C6B8A688D6EBB32FDF3516D19CE5CD1D885BC7CE0F2E6C8307AC9E0D053A
22A09D3598D159219F512C62CAEDF23C63F6BCF34112B59D26289C27AC4A9360
55E65249CCAD137D2864D5C42F8286148DF2F8EB4D300DAEA03F744D56E4B58C
529D57E7FF828B119992A6783AAC9B61C5B96708FBF1C474B8E0F47A8BD3FF0F
F42FB775132A2C2A4325A4B44EC92BEBCE7BF19AB630942EBAC36F959CC3> |
7834 <001C60D8A8C9B5EE310223615F603D6FADA773F24FA30A27A1C7CC7E7A
5773B094CB7DCCDFEC8258E4B93BF7A8F92E96E411A621B07E6514077091009E
330C3E0C6643C2FAF2716AF3965B95856925FBBBB02A61FB9C85846A625283CF
E716AE15E2FDDA8E323D40E46F4DEBA034A435A877881EF50CD0106F11746395
415F995103136737DB28E803D22F2AFE72C86720F0568F465AC7AF2B86C7B24D
D105FC0C2308B2ADC5241099E65D8EA5D467F8D3784D8279ABC754AF3A13C0AB
4D6125D43395F66626A99B4029BBCBA6D3BF557B734A650341458AF5C6D17CA4
B2F609B83476A5E56DAD3A6889BF2B58295ACA4097681B588488364421A758C7
C8864568DD6F21050C830B70CC10D75E731FDC2AD0E2666609A489DE0ECBB124
94F462B70BC00AD5A6F16BE73F42DB3D9DFA8423FF83A8FAE5EB35B478141639
82A83523CF0F3572A610C452906572ABE3A1E74691D590CC1DCD8CAA952A4FA7
64C3AC0F08E70BDC3822E75C7D> |
11667 <001C60D8A8C9B5EE310B885DCE2F812D07A3C620807D36A2E8A6FE797
DD6D02F99128BD97737777CA1E9D8BAE20B5BFA1E371B77BB9996E4C0E66F2FB
04CF17E5D658548D931A1C43E7C78C5C3A499B0A57B5470BCD20C14FCD7960FD
37FA5E875781AF8269A58CC696B03D36F73985D72570D4A5849F06AF6B6DB78E
5364DC964AAE10C2DDADC1922235EF4F308C3956304BF1616DC8D209D024BFF8
4ADCD66EBEE733CD8DE1B756C27A7CB20C593DD498E1069306449AF4A3F32305
8D3AC29A70ABE4DE75967AEB6E0C010A734205F581B828286DAE5041DB3C8E36
B44012998C22F37E55C0DA0A48FC83C62537FDEB585A72CA50B5E0EDDD5> |
25597 <001C60D8A8C9B5EE31020A223391F2BFD220309721C4267351B8AC636
1E6DA96EB981CE0AE6A6042CB749CC48598B49B168A1578EE75275F40AC70AAE
5A11839065AFAC6D2DA963E5BF25BA4F3FFDB1872B6359F0E05D8CD8EE61E1C9
6B2BEEDC6402E4496D81B99F2BFDF4E933DBBCA9C943C24692663EAB11433E6B
DAAF5525C4AE6136E81D41B7C35E0067C32EBBC77B87186B06DD4C319DC7FBBC
46EDE6750AB6A0A1F6CEB7A74A6B4031EBA657CD18879D78F056CF8840203361
BAB7C834269325468C2E0D30606E02A9B8EA66C39E0490BC02A0FEB352E02D77
425D40A18F048F57DC19D844A5ACBBA765415BB335886F280275C50D08E68536
5970E875DD96707CDDA2A351E7940614132C15DA157AE8B67AAA0BA571C2BC6C
7E2625533E23FD6A2047668D2FC38F94F41BD11EEFA30D2D61E977B980831D0B
5F8F7965C8F57B6F57BB7157E2A82414582BDEB3BD535332F8F09D5A9248937E
75347A9E2DA23D522E43BEB31BBAEA2A29E100A1C71595CCB9CC122C3E8C58CE
9412EBCD078BB73B48C88B0B91EA5AA564A95FB316442704CAA6918BD0860767
BAF4B63E274C54127CFA0E53AE254CFD6BBD2117B927C1FA21D178217CC9E9A3
4F9CD8C269F8906A696BB96C3D04B66A0435ABA1B85EE0413493D043F0C798CF
E37F78FC051FE9C50B93A9C982E3FF6AECB177F77C54AE6A222D6C401CDD3E7A
3AB48428F230E186F1978011BA68564D8091985508BFC577311CE21385044497
EC69BAC911464FA5F57DD34C1F99A63F1C895947BBF67770DAA936B5B44A76CD
720A64DDF02EB9C01B6A04475B6CBB44A8D8C5B34BE1CA43DB40EDA4FF497231
AAF9108D73180F724D1> |
11888 <001C60D8A8C9B5EE3130B033F1FBE7D22D13D4C6906C816EE7810E10A
C89C48F906FE5141BB8C9F2AA6FCE439A1DED861CF39AE241EB638C0FE9C74A3
43BE0E0E6B9D2FE3227948910738FC986F6EB0A5031EA748A5A41790863D6D97
A94B35020D24CCF80ABC8319CB9ECD3EAE9475D50D5F04ACA5724764A81FF24B
6A33FB639629BC14C0D2770809092D1EBDBC0FF2FDC118F21BAA8EA5C63BB9F7
4B46CD2CA2E8DCEAF6D0687081D68E0C908FE35678E4113A35D7BAA82564B833
A09C36C6F5BF24D29E7734ADDE139CD4730A6C2900FD8DD28319683D4C43550E
883115913E59DCC1C53FFB61FD0E0A6508B87B8BB1286A6EA5E645B0EFCF9AAE
8848C271450027AA55EC8EB97FA189E6EE5AEA4EE7DE1A0CB0EDEDD1B9A55D34
24A2507DF2B0BCC7532C40C017A050C5AAA4898B07AD1BA625EC369F12753264
106914A9799464231C8E3B51C1051F265168DC52C9FB337F0D4AA38BE2A3BBA6
01F249CA40B656C8F8DA2C3E1AB95A85171410BC205C8F5E9B76977957B0BD78
5A0B3319F63881CC5A26B6DD71159A409A7A4D0435F7D8EF07F98C6C10CB19AE
05CD9614049C059A35A5669B83DA5BD092D6951194D45457937266AF9022BF2D
4E816DB7F610B11544520CA3B684D3240343CA016FF9957785F1BDEDEC54A0A9
69E9245B1D02AF2A28A2548D05D2C8D00EFAE1D1C2FE0036A052466579742724
E8C715DB1A890A856727125F39C07FCF01A806F94A2CF0103D27BBBA56EDD0B2
E0A90> |
9164 <001C60D8A8C9B5EE31020D2183BED3DD65117315BABFD4F650950A03DC
4210B258860F3FD677C8B315DC84737372916EAD753EF33DB7BE0BB3F233455F
147B4D54BA9A2435D3261CF34271673694E23F88AB2426024935B38E19150993
62E2ABD39ED484A20383A17719401F7009822C0ABFA9489A247CECEAA48CB7E5
E5F84D0DDF4648F14DA0AD32A34519D09BF97A2FC787575DB1FE1C1C7EF4F4E2
DD55863C0E69B50EF67AFB7D63249C4076F15BCF21B8D9CA3E00A4F0986908CA
D2AA8F2371882BFBC12096B5C2B7CC9A11C9E260D977CE91F8D41843ADD98DB0
8D3554DBA0B9B02356ECE29C3131A57940E22BFD32D2AD9F39B18E96727395B3
D92635FE401FD3D0F2F664A0180FC330033C26D0E2A78BD7B7B58976781D5445
F6D9D29A49F4BCE8C64C2E46FB9AACD60405B1F56196920383596F52209ADA0B
19BCAB3DAEAA27D93C5D93EBAF0BD908994218> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
53.4448 622.005 mo
(&9;\341!\247E\203\036\232-\223c\375E\203.p#\314)sh
374.765 736.685 mo
566.345 736.685 li
566.345 661.025 li
374.765 661.025 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
374.765 736.685 mo
566.345 736.685 li
566.345 661.025 li
374.765 661.025 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
9285 <001C60D8A8C9B5EE3102E62A7029335DE0648A575C786E7FFB5560A529
DD369689FDFC227C83ED164D54D5D332F4435A2CB56FA70AB440CB8C2287E613
BC2CD01DF7EE7F088468EF9299D74B9BBC04A7B2615AA4AE1AC8D91E8281823E
2D46BDEB343DB1DCA02C4392150DCD118222F1ECC5F66FC55CE39DA5F43F0F8B
4A5B1D12C68A3BB6F987562A425CA8ABB4AA802F73B2ADBFCC986A9BAC1ADE4B
68F9202CF0F098084074FD053B93A42D7645350F962A5CC81EA3FFC38C670E6C
F0A4BFC2E7ACB63F240286D76004D2E9E4DC071A315DC1524127D36F540C078B
F63904E2D0A87195CC6E299859CB4CBB4F7AF88212E96F521431A6C666C41959
D9EA16F896BDA88DCE476C28D3D6ED7A1C05CB073245CE414DAD98A89453548C
B8ED61A4FF6D7F90B00B177B1945F13DC8B07112E42D027E3C0063A10283FEEA
C496E99C679E00233B8A2C8100B9BA5400F49B8BF7233D5EEF03E945432968B7
B7B6CB8C77B972AFA516161E4F478785E3C32B30D35E1C157C94BD95F6E4193B
AED698BA05BB697F0E4543A026D25EE11384B22736B7C8B01558> |
12565 <001C60D8A8C9B5EE3119EFE179C81DE30B0482C4086C38C576929AF0D
B8F3B193C1B84C9D5E6836DF3529C1D4181EE5C3B0A62B5766986A402F612BFC
F90D984552C455AFE4D0910BD1FE259FC2355D322E8E967BA17C4E58D74E5137
1CBF58174D908CBD158B422555DEB039AED6DF7DC2F48F4B7E44218C727AF418
964B8A032176BF8A7DD710191C55885FE76C8AABCCEC76F0D4659037488327A4
790DD3B9FC24ADE95948A24AC1AE049356DB86B6764D7EE6CD326C06854BE3DE
E9E2A07F476752D1F324FFDA0C5ED0E0107B251EBA38BD3C64242ABC8EE5A7CB
1135D5958EFCD79F4AE835897EFC35FB3E8D2E2BD8E37742B7138132F9AEC8ED
688C8D3C5777EF3664922CAC8452866F95BDE72BE000E9537534C8CDE49FEEC5
D729D870853352D4C2E3FEDF2A3F0FEEE1D7B3E0574219770A8A7E29191787AC
99196598BFD9AE373906FEE51C8100AE7DAA228866B03FCC4794718795D4A650
60BDCCB1460BB4C9BA2D5B9912657870ED922E535E8E6C71FAE786C3EBF58829
50FF2B8DB24EF61597276A757314D0040FBD415B3> |
20228 <001C60D8A8C9B5EE3154A73ECBD4B91AE94A1D5F7E164667432E77E18
EFEE6A7DF37781A73D494CC5C34D45AAA4B7C8AEAB76FDC7B8F24A97A257E0C1
AA63671CCF9FB199EA68227E681CDF3CCC852636290956BBD7E36AE3B9EEBC3F
BA417616DB56E027E72B930C4A5506E779FF7271FEC11983A4FFE2A689F4BF21
485C0D0698905B1921C8083E14E640864A7E016938C9338581413F5102EEEACA
2E5D981A681454CF7EB6C98D06895D26CB8655016B6A3F29D3E8012E9A4475C5
8FAEDA4731ED542FF9DA77B1AD3AF3434ACD9914DC3019E05EB649F7A02C0511
23B5D7D5B4B9B2E91DC766E64CDF65C4076C67A5E177751CE943A01CBB4D3B50
5412E447B45E371FE9FAA999B95ED428103DC78A2611996D6DDE0446364D252B
E6789407D5AD30E640CB68529860AC5513FF11DF9120B2B4CAE1983A9BF1EF2D
0DD> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
383.705 693.105 mo
(\(\025"\004 \214!5_\037$E1\025O\004)sh
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
405.425 719.205 mo
(2\2076B \214!5_\037$E)sh
372.425 626.465 mo
564.965 626.465 li
564.965 550.805 li
372.425 550.805 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
372.425 626.465 mo
564.965 626.465 li
564.965 550.805 li
372.425 550.805 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 4 GetGlyphDirectory
8862 <001C60D8A8C9B5EE310D062D34148AC99B3F6E1AEA7465DBFF4332F3C8
A5678AFEF7B74CBA0C98A970DFDB0EB92D532A2123B4C8610C404C9DA1123581
4FBF34D90DF5130AD430DD53D3DC5C4801BB088B102670DBD009F6AB65FD6722
77F32417B25A8FDF370180843DC22FDB52058B299AAA8FEA766DDF4B66E81869
0C5C5EE28A2BC544A5419743D38CDCB3CA74065A5DD2BCC419126968BD3683C2
672917AA2DB30D570DF981B3E1AFF22009C7EA310366305C5E7337D49FEB7F62
79CBAF3316BE1BA19DD50AF90E76A0C7F0FC53DD2835732DAD4BF1DA9F89D3B1
8AE391E422598B09196EF251BD72C4901F315C3FF7BB399A311F55081F869BA3
96ED50123BF9257D248CB11E4203B9BF67B4EDC9602A2CC2CCBF9898BDA87CDB
B28D1A8AA5D031A078397BE2DE009A6043B795E9D3B40BA32328813C98999A4F
367188931888BD0CFE97F88B4C57154CBEFA751EF49AAE8746DA8FFC> |
10442 <001C60D8A8C9B5EE310D101E4014B8037A933398D67105F7A876012FB
C849D8C3708C3E853093B3A2EAD1CAD2B681F22218DEB017D67F8F7955709B6F
7AA25F5D2BD0CA5EEDD3081E9B21DC945E24C4F83752C49607C0F0F1E987797B
503478D16F87E894C74266A30AB42404ED71726F97850E7DF0156431C7B33245
8601501FCEF2F3BD4AD1180ABCE5731446CC8A81EDB73FC8C5894E4607E459A2
B3758D034BF1D0D05FA5FF2CAD7D51BEF26ED010EE2032BB471584DA2E6DD2A4
3DCA7D4423D43A131D60F37C5A16AD191128E92DE346C600EFB093081B2B2EEF
4CBB11801CB4E92E1E5FF56A5FB04EDAFA21605B34FEAAC2177D06E4ACF32DDA
DD51BACC8E5533409408776C9AD98D72AAA4B1EE26DA585940E7B13423C7DE3E
DA92374DEAC27B51BC479DBF6175D1084310C10A6D0D2C7581BF40E4D71A6AB0
70DF5D9BB6306A9C406F43820E17F17E42DE787EFFC06B823EC1D57B56207866
FE07160CF68453884FFBA7BE51298DAAA8ABF5E5A0CCC410DA217B70C7CB2769
443FD579226121FE894> |
23229 <001C60D8A8C9B5EE310D8488CD30E0009F2A6EE0B9299B22D81287A1F
D69694818A03479B4A181E62344A5AD1A79684A7E87CC742FD2A6D687301F602
159E59BA3624311B12EC9422F7C8F763208F0290BE72D0CCBA49D65EB57EBA08
699F8EB32F9904DE0F12AFA34143F6E7B0400AF495F5D3975C89EBE39642A09F
381802277DABA94A83320EE58D3750F203C91B13EB127E0FD36FD16F75C2D127
9DC83561B3ED3F1E67437CBF5ACBA53A9D803BF9B71731C0D2F4136AB9FD3446
C917F79C4808E3ACA4872D40DDC56496F8E89A3D891A17977901097B4B0E07FE
AE2E03ED064E805ABC7CB7F560A69A549237CA97B5D653AE6B4F8B8FDC24C2DF
684A3F79C9383ABDD94D29D4293607CF6AD18F36D54494CFC7B899A4204CD48F
390135649555AA911C6FAF139C410F6102CF51FDA39B4944FDAAA2FA75385236
E9B644274CCA90AD25AF5A5908FC1D2129965913C048E71D53B1985C58C35BE2
71A36EC8B137D82B8A19905CD321F169F661323407B4D2BD53ECCDD34BA15CC8
4E427AD160E> |
10246 <001C60D8A8C9B5EE3151139016F96B73665EE42DBB44B65ADFEBF6F85
169BD462F1D4D156FB8ACB21207FDDD5ADFF9A7EF398FDBCF85973D91E7BD76B
9CC80354FDCCAB3CC085B5967E318B8E29F84770049938F84FC4F8EAD8264B8E
A39E756F523A593695E51CC52D60063759845DA4AF90E9A4B1D31B62207DF1CC
BC2DF1BA8B21C2385ED904891B77E6E25C55EB1BAC759A811DB1DF08BBC1D5B0
5F4F92C97DC89A95619F89368A638F1F7D2087173EF011EE66AD0B9B5642D643
E0327AB75055533754C047BAE4DDE2CD2D3F5895B10306AAFFB89980BCAAB6CE
B8161567E46F24D073B47383EB773A45CB008E88D00ABB5C0625FE5E0C164780
5FC1DF12D74A05E33AF05856EA4AFF5CEFE732022FC45F214B118B1C6B600705
7673991558785FB2086717EABAA064631DA7F15026BDDA5D88C6014BE637B1C6
F34E4C4A6725B48> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
392.665 595.885 mo
("\236\(\312Z\275\(\006!5_\037$E)sh
374.765 530.525 mo
566.345 530.525 li
566.345 454.865 li
374.765 454.865 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
374.765 530.525 mo
566.345 530.525 li
566.345 454.865 li
374.765 454.865 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
448.865 499.925 mo
(4>-\233)
[21.72 0 ]xsh
721.985 750.905 mo
1327.92 750.905 li
1327.92 438.965 li
721.985 438.965 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
721.985 750.905 mo
1327.92 750.905 li
1327.92 438.965 li
721.985 438.965 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
750.065 641.225 mo
1010.88 641.225 li
1010.88 535.985 li
750.065 535.985 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
750.065 641.225 mo
1010.88 641.225 li
1010.88 535.985 li
750.065 535.985 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 1 GetGlyphDirectory
9690 <001C60D8A8C9B5EE310D41EE78C46AAC425E3A515F075155469D3B7148
F6139EF4B32EB78E8DCFCC05BB368DC075695D4973E0956658C1D50B2EE143D7
6C4D3A49971AF9586C4700CE1D4454EF7DCC08644C29E13911315EDF494FB7B5
ABC417FDA8C4CDC192EB92A244567A911DA0300D16F9044A261178249DC0947F
93EBDD08F4B08F7CBEF9771F92B22195B7EE94C3FA25BD457FA8FB80E4941AA9
4932A49645E6E916A8F0EF6F5DFAD098A5649430D7F5395BC9E860840547BA92
7E7F018187EF5F7F38F29A97075DF3C33EC42D5570C4EC4B2CAA1A3256E81D38
3266DFFFE1FB> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
847.905 569.805 mo
(J+%\332I\337)sh
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
26111 <001C60D8A8C9B5EE310314EF6401CFC25C044A2E1B9D5FB982F9B00F0
1379C06C7D2AD9EB2170494068404E9C0782437607AFDEDD47E3464F483DF1AB
54335F927400922DE2A2F556E8BFBB31775147C3C23B4CF3CA0B248E2893B1F6
9E911BACDC054747F971C11AE3178837D72F8424B9D65AE25664B2528DE22EF0
CCD38DC894A116B33EF7BD1928AE76E224266EFED66445161ED9694FE5C30B12
51036E7E94E33CA1AAE2ECB7394EA021A0EF8A1DD5F71DFEB8F8D38CB2E152F2
F43CEC19949EE1FDB7A14DD35D9A95208F75C2DC466F030D3DA8787C157BEA5A
7C33A93BFD3EBB7290A00FDB94921C65AE31D281459B4A6D2F249F481A1CB23F
887E3ABA4E6B6FA1EEB7970D94C07EEAA019F1E7242A74EEF78A4E22EDD1AD0A
2AF67F05E65F1758884545B883E6D947CAEE80184BFE6C1232C37369AC805BBA
EA4DBFE917FB32FFD7BD9BA7D67E5B84C74F99FDD809D36C3EC2A7306B70493C
AE5EB1BA8EFA513FC576A80811D4C8A3EDF1BD6EBA017181D05563806F19372C
C52EBEDB4A4AD18D52F1DA88DF3ACF6D9845DA09E054A9FE88908840B25C5E6D
A7D18EFD17B2CAEC5FF0D59BFB5FD2559DBECA08D26A391EE9059960EF144E55
994A6F372783DD8B8D392124D82B4B2FC41AF88B1A1E21AF666D372FCDDA86D5
8BD666AE3BE77B99314C4226B064437CCC56F9CB1CA979B6A725E567ED541D69
DC03ABFB0045FA18603A6BFE9AD7E068926E5D9CE8CED13E09CE7FAEF6EDA816
98E2A2D10D93D52753AD4AE8368> |
15169 <001C60D8A8C9B5EE310D2BF4EA27ABD8F7AC6C48F45BFDDD02B70C45A
65B358CD24BB043838B7192861F5752024C66E046840AC2BB660D4C542504823
A64C11617B9AAC61C764E727798E7CFF87944A77ACE6E3B06D91B08422F15B7A
39A44FF1A2B43E963FF42F69F7627D0B080BD48DC3CD816FF33428C6340077AE
A950DCD2113883D6BA785DD46058E1C8A706B6ECE83441E6E28597BD67395225
D59E9A66C6A92355610580881DAEC18CFF0E795D52E8752F5087ECAC5E6E5D4B
8688B6B720C422568865257672355E8FFDEB2B80BD0583BC7301069EB81EEFA6
9597F300543237061D7AAFF7DF5010244035B1C730344D211A164323007D257A
363A9A34ABB7F35ED416AA5D2DF0017492A11725E43A116C0E4E240B75C894AB
AA4E2562743E9198F7E54B460DEA34744F5C67810700CE8AF3317041A1B28E5> |
26573 <001C60D8A8C9B5EE31144FEF4332851059827D67439F8CFB444E85A1D
8A9927198F146F6F1041AE76E01FA744FCB24AA52153A0A9CD3B766EA50797BB
8483763E4FE51C4CAD02DAE68FD75846E6B329546C39BF9B1EBCDCB58F8DDFC0
1EC23982ECE6199AD4986E99287AE5AE9A383DE2A1A06004EFE04E95E060B8B3
3DA8D42B3DEBC9D76FBA4036AC64ABEAEB33F531D258FFC406DCB6C9D0579AE6
EA9C77C3541D658CA4808A8ABF5610C3398CAB823A501F96FDCE32B2768621E9
815C71AEC9AD367FB0B5E3EE8BD398C32EE432A11397A5D3A7A08BA737CD5FD6
1D8B5B917137208FE36249D8BEA7FB8FB0A1BE84C7DB5D34CED030F6CDE990BA
7FA65BB67CF4AC12A16FB18EB649B0C7B04277D53AA14> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
760.965 595.905 mo
( \214!5_\037-\001&9)sh
869.565 595.905 mo
(e\377;A;\341!\247E\203g\315)sh
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
25960 <001C60D8A8C9B5EE3100C5FAEDBEA35CEC56487D6C6F814CFEA249E75
F61CC8154C16F659E01E26F4C643220E11420E2DC0036A827F813F12112D30A3
FC33DC7F9126EC0CCDBF235B84CE12B2A36010820BB804A9CED86EFE4058B6ED
9CBA5C4E66CBAB2C5052B4BAB145A3F12F2FBF97CEF6B832711E2C92F04BBABB
98253787D4EFD8984D56BE3998E176166B9381D24C6F96A20F8B1549A3B7165E
04AD38D4263003BB78AC62CC678A65A05EBA32FB694AEEC3C55CD78BCA538210
2DFA3E53E84C5184053F8DD04571A1BB04BA06BEC6E6406B641A4ADC127E096C
65E8D2AD00F1A9B95597C2FB635401944F7CFDB042321754B43F213C61961502
C92931D2E83B78CAF5F4F4F0051BD327A58915F4B58078E96FE6990BBC6C3B02
B06C268F602B3A82336AADBAB522F9F74C1181487DB02C944287E8FB5DB69B48
F9AA1402A472B4E5C9C01CE24C48071880822FBD2392D129DF5FDB08B03E43F7
F1D88F5AA3F165DBC1FCBC3474E777D4CDA0E3B45A914B5B320DE014590> |
8453 <001C60D8A8C9B5EE3112EF14D2E788042E896728BB40860E801E060687
8C9F7D71CC4E7C1B1684B7C605B0E6CA19E97C33F0843FE5EB512471FF60E45A
82C34FC1FE67939480115D4276A01191CAD8CD9B00D7039FF73F98DADFE490A9
646420CCCD1CD23A271982C6B461842DC18FF87878E52462052BC65ABA7D8005
106DBE71F3E19EA369F6927909078CF76E524846CD811E9E73981D654CA4EA91
E5A50E29B31DB1F5C6D14D58BC51749D7ED78F3F259E491F41F3514E2001CCAD
98373FEF15EA6D7848CDA87BAFAF750EFA6696701EE314ABBAE70A99C7981B3F
40> |
13967 <001C60D8A8C9B5EE3102F64325B7FD135D88F2E1F98BD166491F43FFA
8DEB74384228D0F26023FEF1A8FFEEFB5B44B1746238F5CB786556550F751529
95FB2A8F4AB854AD7076BB36011278315C619191B87787FFC20D6783617DC175
D1BB411F2835E7B34C99995036B74183082FBFED9E77325C9F71B78C8152279D
5C98137477A46C3776C3A2E2491E435CEB0E292783CD6EECFB8A7932F260C9BE
8FCD0618F2A51D70B45F671F704BBA87DAD6CF73426F7A8D2153DDACC51798AC
CE8154A15351B93BE399C3724EDA3C6FBE297CEBBDBE63785668345A9DE0D7D2
3F50EC826911D8F0A804A1335F8D0956E9DF1D6D7A77DBD9A7C8AE4FDF762D30
5F9184551767B03D027DDBC321BEF756A7DEA6E1214F3A103960D6BB067EE906
8A30A01BF71D3CA11506A07FDBE3DBD64B98FF42DCCDF45A678A339> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
847.905 622.005 mo
(eh!\0056\217)sh
1086.18 530.525 mo
1277.82 530.525 li
1277.82 454.865 li
1086.18 454.865 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1086.18 530.525 mo
1277.82 530.525 li
1277.82 454.865 li
1086.18 454.865 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 3 GetGlyphDirectory
9798 <001C60D8A8C9B5EE3102652A68F040A6F6003AB889693CA942AA73CBE4
D614147F13F97A8BAB608E55331009C5D7E64E046419EC2C7958D7048A0323CE
37556D4A17E89D47E6FA438D1695BA42B40077FE79F55D12A10F04E3638A24A6
EEB7DBA1B26AAC0D1AA53D4CF710837FC071DA89092B21DBA5F31DA22068F7CC
8BB426F82D3FA6156F9E2DEF43ABC882A48FD929EA7E8FAADF38640E38FAE379
74232A2C8F49FC2FA824630DA6445556599C4CFCD394009A3C32C6CD149E68A3
48BFA08580086601FEEBC8FCA958CFCEA1543790ADE0A414F6355221B5ADC123
93086A8046B2E7AB3258EBA88F4D600285B80D353E42EB43574752129AC8289B
9A3BE5521DD40371F80E310F066D0944BC81920A9E464E273A7AC6BD8BED9DC9
EE771A32BE09BD82B4C1B067D7671F45B1EF8C11DEDEACA97460559F6CD1B6EC
FD097BAA7C38C414FCB69120243380BC2771> |
7995 <001C60D8A8C9B5EE3164C1E1DDCCCACF06295A8E417950A9C8944F6BFD
2DE12A545056A0BDF499AA88A60B5873B3B851A04067C9A9D8E8A74E52CA8851
F8A702A5BE2C9542105E977245C8905840D757DA681A98A3921FC3E4EBCA2BFA
91C6C4796DEE7C5EEB469B8F7346E381DA356068B62A71B05429666711EDB0BD
F01ACFF4134ACD0F525A2307D625E8FE26BE0A6F2CC1547899C3EC073AFF830F
6002C11AE61D731D533434F02A61561FFC5B8EB26D41C312D49D7647A2143D36
53BA52FEEF264D43523D3FCAC04BDA156662D418EECEF7DC7959BA8C6C3FC88C
CD39555E68895F161587B57B9549295EC54DC3108BF5C1598236932FD382D41A
F51F7BB98EB00AF5CECDDF368B5D7084CE107B82D0921721DF4CCCED45EAB595
5D30D94E5A56868AF9558B3C6B80569DEFDAAB4EECEB2B14860A1935FA8480CA
45BEB8D992F02B9F5B> |
11501 <001C60D8A8C9B5EE310D1EBDDBE2F9164F0D81A0D3B97C895A9667E42
840B04F1127DCEF2A7C4022E3A40B810D11212BDF777848B33C5B8AA0935777C
6ABF8C9B0A6B4C1F4CAFBF83427D8C8E0EC6F8B48E9C5339D95F1CA8930844F0
923CD9F85915C1BE1A75C7130A02F47A92735DDF2CCF51C75C2800C42B28CAF7
7F55111F49B349AC41531704055E7BCF17C8C07667E68F338F3FEB4B56616F94
0DCF1FD51ACD113AB5003F3D923654E585AB11D11F1FFE73C4FF182521A1C9F9
BFFC46C39C47BD07A14A94C7D06396FB1F6BA33B7DE68FF8207B6773DDD465EC
F3D0803F2E7F5254AB2E4FCAE0ACE0C796756A2607E59223515C874C39692BFC
593E2EA076C53A490D6FBD2B20AF2B9B4FB7C8258663E2FC4C14C3A7049A3D6A
92A14D8EA22CCCB7BE6ED259E740164CECDC1D592C692290E54F8DA6718B91AE
35C4E204E3BD7DB4E9ABEA753D2F6E3CE00B63366A67C> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1117.64 496.652 mo
(&F\037;4\270,\355)sh
%ADOBeginSubsetFont: YDWHRW+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YDWHRW+DengXian-GBK-EUC-H)
%%Title: (YDWHRW+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YDWHRW+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
8453 <001C60D8A8C9B5EE3112EF14D2E788042E896728BB40860E801E060687
8C9F7D71CC4E7C1B1684B7C605B0E6CA19E97C33F0843FE5EB512471FF60E45A
82C34FC1FE67939480115D4276A01191CAD8CD9B00D7039FF73F98DADFE490A9
646420CCCD1CD23A271982C6B461842DC18FF87878E52462052BC65ABA7D8005
106DBE71F3E19EA369F6927909078CF76E524846CD811E9E73981D654CA4EA91
E5A50E29B31DB1F5C6D14D58BC51749D7ED78F3F259E491F41F3514E2001CCAD
98373FEF15EA6D7848CDA87BAFAF750EFA6696701EE314ABBAE70A99C7981B3F
40> |
13967 <001C60D8A8C9B5EE3102F64325B7FD135D88F2E1F98BD166491F43FFA
8DEB74384228D0F26023FEF1A8FFEEFB5B44B1746238F5CB786556550F751529
95FB2A8F4AB854AD7076BB36011278315C619191B87787FFC20D6783617DC175
D1BB411F2835E7B34C99995036B74183082FBFED9E77325C9F71B78C8152279D
5C98137477A46C3776C3A2E2491E435CEB0E292783CD6EECFB8A7932F260C9BE
8FCD0618F2A51D70B45F671F704BBA87DAD6CF73426F7A8D2153DDACC51798AC
CE8154A15351B93BE399C3724EDA3C6FBE297CEBBDBE63785668345A9DE0D7D2
3F50EC826911D8F0A804A1335F8D0956E9DF1D6D7A77DBD9A7C8AE4FDF762D30
5F9184551767B03D027DDBC321BEF756A7DEA6E1214F3A103960D6BB067EE906
8A30A01BF71D3CA11506A07FDBE3DBD64B98FF42DCCDF45A678A339> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YDWHRW+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/YDWHRW+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YDWHRW+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1204.52 496.652 mo
(!\0056\217)
[21.72 0 ]xsh
1086.18 626.465 mo
1277.82 626.465 li
1277.82 550.805 li
1086.18 550.805 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1086.18 626.465 mo
1277.82 626.465 li
1277.82 550.805 li
1086.18 550.805 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1106 595.885 mo
("\236\(\312Z\275\(\006!5)sh
1214.6 595.885 mo
(_\037$E)
[21.72 0 ]xsh
1086.18 726.725 mo
1277.82 726.725 li
1277.82 651.065 li
1086.18 651.065 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1086.18 726.725 mo
1277.82 726.725 li
1277.82 651.065 li
1086.18 651.065 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1095.14 683.125 mo
(\(\025"\004 \214!5_\037)sh
1203.74 683.125 mo
($E1\025O\004)sh
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1116.86 709.225 mo
(2\2076B \214!5_\037)sh
1225.46 709.225 mo
($E)sh
961.565 896.945 mo
1178.04 896.945 li
1178.04 838.685 li
961.565 838.685 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
961.565 896.945 mo
1178.04 896.945 li
1178.04 838.685 li
961.565 838.685 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
1048.08 875.085 mo
(M\322Z\271)
[21.72 0 ]xsh
961.565 1090.5 mo
1178.04 1090.5 li
1178.04 1032.24 li
961.565 1032.24 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
961.565 1090.5 mo
1178.04 1090.5 li
1178.04 1032.24 li
961.565 1032.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 2 GetGlyphDirectory
11071 <001C60D8A8C9B5EE310D0888C7F3A3882E46C7FBDC57024D3E3F8E041
AEBD6072987E04D146B65739AF3E8EFC13334996B15708BC7CB13643F75463E0
00F7691402BAE8CCCAEA12BA79CC2FF309125CE1C0C6708CCB375E093A00DEE7
472680B080F37671515D737847AF643C8A86475A7251D8F34D78CCF3611E6B8C
BA89DE98CD62B7B59DB9FF22570E39BB0102F5F8E0EFE7730CD21D271FDC9FFD
9B9B1D6A8D8B78122F9E2E95332786FA153FAD359F8F1CC409002C837EC04476
27D089E26E7AE5A2ECC15680F40F487BE3CACA0A73F7951C58CEC352CC25D562
B00C1B06DEED0CA414E6D3AEE72638EEA423A601C61C7152E450A9446DFB2570
3F4261F1888EFC874D3E37DCDD3851A14E8E89287B69A3A99> |
25935 <001C60D8A8C9B5EE310317740BC3DE7F9C8C62A3EC87E7F1CA0E14E50
16F9680903CC6AAD809DCC50BDFCAE45B61E5556B8A16716C7867077AA54C6F4
2B637B8761A86C3341A7A670E0D1A15551BA22945226AD7855AC3314CFDBD790
C3D3F2D6FC697EE92EA5223F928827526D6614CCD46682C25E3BD196660BAE94
7352D641FAF3A4A1B5599340E8A7D517DCF0CD79E612FCA1F4D3E79F3000A69A
9A29EC71E1A7578EE62A1FF973560126D176B756A05389F6EBE66E6DD404ECF6
FA1A69EEC72B51D3DFFAB1823D3F4DD14EEA92506E72427CC6EFE112A04306F0
77CFBB540CD45D735544DC15ABFD80145849785F573CA200DC92201FF04FBE01
3C89C7295438B3AB1D6033CEA752E001C891E79CD70969FA4C8134A6007CFD6E
1D262C66906B6FDD73A599EAE3BDC771642B720CCEC95FD6F6D95490D2256952
B6E343D3BFADD2896F97864CB5754> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
982.925 1068.62 mo
(G\023IuE\203+?eO)sh
1091.53 1068.62 mo
(\035\015+T6\032)sh
612.245 595.355 mo
721.955 594.905 li
@
788.285 970.325 mo
961.575 970.325 li
@
788.285 970.355 mo
961.575 867.845 li
@
788.285 970.325 mo
961.575 1061.35 li
@
666.315 842.225 mo
666.065 907.815 li
@
666.065 367.625 mo
667.135 594.925 li
@
145.025 346.865 mo
246.785 346.865 li
246.785 280.205 li
145.025 280.205 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
145.025 346.865 mo
246.785 346.865 li
246.785 280.205 li
145.025 280.205 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 1 GetGlyphDirectory
7563 <001C60D8A8C9B5EE310D27FA79E763FB23829AE5DD4EDAD288D3DBA133
67B7EACAF177C9CE3D42B1C741BCA68955A16E54A363F2F50F12D288D5F74604
78C85E8C6E99E021A8171B5401F92ED12146BBEB0E97FE087ABE57F27E636041
B3EE69> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
163.365 320.765 mo
(J+\035\213I\337)sh
144.365 168.305 mo
246.125 168.305 li
246.125 101.645 li
144.365 101.645 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
144.365 168.305 mo
246.125 168.305 li
246.125 101.645 li
144.365 101.645 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: YDWHRU+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/YDWHRU+DengXian-GBK-EUC-H 1 GetGlyphDirectory
7423 <001C60D8A8C9B5EE310D3B64359BC7E1A5470EF735B03284A9677B1D95
D677743FBECB52A9685CDF2D55B1F8108D703E5F6BBA5B2164> |
!
end
end end
%ADOEndSubsetFont
/YDWHRU+DengXian-GBK-EUC-H-Identity-H findfont [21.72 0 0 -21.72 0 0 ]msf
162.665 142.225 mo
(J+\034\377I\337)sh
667.145 184.325 mo
667.145 264.375 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/YDWHRW+DengXian-GBK-EUC-H-Identity-H uf
/YDWHRW+DengXian-GBK-EUC-H /CIDFont ur
/YDWHRV+Calibri*1 uf
/YDWHRV+Calibri uf
/HIBBAA+Calibri uf
/YDWHRU+DengXian-GBK-EUC-H-Identity-H uf
/YDWHRU+DengXian-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
